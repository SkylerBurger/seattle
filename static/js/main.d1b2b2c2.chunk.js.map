{"version":3,"sources":["../node_modules/natural/lib/natural/sentiment sync","utils/withTracker.jsx","components/Header.jsx","components/Footer.jsx","pages/Home.jsx","api/utils.js","api/database.js","api/eventApi.js","api/personApi.js","utils/getDateTime.js","components/EventCard.jsx","components/EventCardGroup.jsx","hooks/useDocumentTitle.js","containers/EventCardGroup.jsx","pages/Search.jsx","utils/hhmmss.js","components/EventTranscript.jsx","utils/isSubstring.js","components/EventSearch.jsx","components/EventMinutes.jsx","components/VotingTable.jsx","components/EventTabs.jsx","components/Event.jsx","containers/Event.jsx","pages/Event.jsx","containers/AllEvents.jsx","pages/AllEvents.jsx","components/PeopleCardGroup.jsx","containers/PeopleCardGroupContainer.jsx","pages/People.jsx","components/Person.jsx","containers/PersonContainer.jsx","pages/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","withTracker","WrappedComponent","options","trackPage","page","ReactGA","set","pageview","window","location","hash","substr","nextProps","currentPage","this","props","pathname","nextPage","Component","Brand","styled","h1","HeadingTab","transition","borderRadius","padding","backgroundColor","color","Header","Fragment","Segment","vertical","Container","to","style","marginLeft","Footer","inverted","Grid","stackable","Row","columns","Column","as","content","List","link","Item","Layout","minHeight","ContentContainer","marginTop","marginBottom","SearchBar","Input","width","StyledGrid","display","HomePage","React","useState","searchQuery","setSearchQuery","handleSearch","a","value","verticalAlign","centered","placeholder","onChange","onKeyPress","event","key","history","push","Button","attached","primary","Link","fetchJson","url","fetch","then","res","json","WHERE_OPERATORS","eq","contains","gt","lt","gteq","lteq","ORDER_OPERATORS","asc","desc","WhereCondition","filter","generalErr","Array","length","columnName","operator","Object","values","includes","OrderCondition","by","s","String","db","credentials","firebase","initializeApp","connection","firestore","table","collection","doc","get","data","Promise","reject","queryResults","results","forEach","thisEvent","filters","orderBy","undefined","limit","ref","where","catch","err","_unpackQueryResults","apiKey","authDomain","projectId","databaseURL","storage","getAllEvents","selectRowsAsArray","getEventMinutes","eventId","indexOrder","eventMinutes","getEventMinutesItem","eventMinutesItem","selectRowById","minutes_item_id","minutesItem","minutesItemFiles","minutes_item","file","getEventBody","bodyId","body","getEventTranscriptMetadata","firstTranscript","file_id","transcriptMetadata","gsReference","refFromURL","uri","getDownloadURL","transcript","getVotesForEvent","minutesItems","minuteItemsWithDecisions","minute","decision","formattedItems","item","matter","name","index","votePromises","map","all","minuteItemVotes","allPeople","i","votes","votesByPerson","vote","person","find","person_id","full_name","formattedIndividualVotes","sortBy","getEventById","body_id","minutes","description","videoUrl","video_uri","date","moment","utc","event_datetime","toMillis","toISOString","scPageUrl","source_uri","getBasicEventById","getEventsByIndexedTerm","term","valueMin","natural","PorterStemmer","attach","stemmedTokens","tokenizeAndStem","stemmedToken","matches","summedMatchValueByEventId","mapValues","groupBy","flatten","match","event_id","eventTermMatches","reduce","current","sortedSummedMatches","reverse","events","getAllPeople","getVotesForPerson","personId","formattedVotes","eventMinutesItemsPromises","event_minutes_item_id","eventMinutesItems","minutesItemsPromises","eventsPromises","allBodies","voteData","eventMinuteItem","minuteItem","formattedVote","voteForPerson","eventDate","body_name","sortedVotes","getDateTime","format","StyledCard","Card","boxShadow","StyledCardContent","Content","EventCard","fluid","Meta","Description","EventCardGroup","Group","useDocumentTitle","title","useEffect","document","SearchSection","div","margin","SearchResultCount","span","paddingLeft","SearchResults","DateFilter","Select","EventCardGroupContainer","query","searchInProgress","setSearchInProgress","allEvents","setAllEvents","visibleEvents","setVisibleEvents","matchedEvents","loading","text","comparisonDate","subtract","isAfter","Search","q","queryString","parse","search","hhmmss","sec_num","parseInt","hours","Math","floor","seconds","TranscriptItem","flexWrap","alignItems","TranscriptItemText","isSearch","order","boxSizing","fontSize","lineHeight","TimeStamp","memo","searchText","handleSeek","windowScrollerRef","useRef","cache","CellMeasurerCache","fixedWidth","defaultHeight","handleUpdateScrollPosition","updatePosition","addEventListener","removeEventListener","onResize","clearAll","parent","columnIndex","rowIndex","size","onClick","start_time","Icon","searchWords","autoEscape","textToHighlight","height","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToIndex","willChange","isScrolling","onChildScroll","scrollTop","disableHeight","autoHeight","onScroll","isSubstring","string","substring","toLowerCase","indexOf","StyledEventSearch","flexDirection","Subheader","h2","SearchInput","TranscriptSearchHelpMessage","SearchResultsWrapper","border","flex","EventSearch","mediaQueriesMatches","transcriptSearchText","setTranscriptSearchText","transcriptItems","dispatchEvent","CustomEvent","MinuteList","ol","listStylePosition","MinuteTitle","fontWeight","MinuteDescription","FileList","ul","listStyleType","EventMinutes","target","rel","href","Headers","accessor","MiniTable","Person","Decision","StyledTableHeader","Table","VotingTable","votingData","isPerson","striped","headerMetaData","HeaderCell","Body","votingDatum","Cell","record","StyledEventTabs","StyledEventMenu","Menu","borderBottom","paddingTop","zIndex","topOffset","activeItem","setActiveItem","contextRef","getBoundingClientRect","top","scrollIntoView","scrollBy","handleItemClick","Sticky","context","offset","styleElement","secondary","pointing","active","details","StyledEvent","justifyContent","EventDate","h5","FixedSentinel","position","left","right","visibility","DummyContainer","isFixed","DummyDiv","PlayerContainer","isPip","PlayerWrapper","StyledReactPlayer","ReactPlayer","Event","fixedSentinelRef","videoPlayerRef","setIsPip","setIsFixed","matchMedia","setMediaQueriesMatches","setTopOffset","observer","IntersectionObserver","entries","intersectionRatio","isIntersecting","root","rootMargin","threshold","observe","disconnect","video","getInternalPlayer","onEnterPip","onLeavePip","mediaQueriesList","offsetHeight","seekTo","parseFloat","paused","getCurrentTime","play","onReady","controls","EventContainer","setEvent","eventData","Loader","EventPage","params","FiltersSection","ResultCount","LoadingText","Results","isLoading","setIsLoading","basicEventData","AllEventsPage","AllEvents","FlexWrapContainer","marginRight","cursor","transform","CardHeading","withRouter","people","email","PeopleCardGroupContainer","updatePeople","fetchData","People","FlexContainer","personHistory","phone","website","updatePersonHistory","initialize","App","basename","exact","path","component","Home","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,2aCLV,SAASC,EAAYC,GAAiC,IAAfC,EAAc,uDAAJ,GACxDC,EAAY,SAACC,GACjBC,IAAQC,I,qVAAR,EACEF,QACGF,IAELG,IAAQE,SAASH,IAsBnB,OAnBS,4LAELD,EAAUK,OAAOC,SAASC,KAAKC,OAAO,MAFjC,yCAKYC,GACjB,IAAMC,EAAcC,KAAKC,MAAMN,SAASO,SAClCC,EAAWL,EAAUH,SAASO,SAEhCH,IAAgBI,GAClBd,EAAUc,KAVP,+BAeL,OAAO,kBAAChB,EAAqBa,KAAKC,WAf7B,GAAiBG,a,6CCPtBC,EAAQC,IAAOC,GAAG,IAElBC,EAAaF,YAAO,OAAPA,CAAe,CAChCG,WAAY,UACZC,aAAc,MACdC,QAAS,aACT,SAAU,CACRC,gBAAiB,UACjBC,MAAO,WA2BIC,EAtBA,kBACb,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACd,EAAD,gCAIN,kBAACW,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,WACP,kBAACX,EAAD,gBAEF,kBAAC,IAAD,CAAMW,GAAG,WACP,kBAACX,EAAD,CAAYY,MAAO,CAAEC,WAAY,SAAjC,e,2BCeKC,EA7CA,kBACb,kBAACN,EAAA,EAAD,CAASO,UAAQ,EAACN,UAAQ,EAACG,MAAO,CAAET,QAAS,YAC3C,kBAACO,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,CAAMD,UAAQ,EAACE,WAAS,GACtB,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAQ,SAChB,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAAC,IAAD,CAAQL,UAAQ,EAACM,GAAG,KAAKC,QAAQ,UACjC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACT,UAAQ,GACjB,kBAACQ,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,eACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,YACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,gBAGJ,kBAACL,EAAA,EAAKI,OAAN,KACE,kBAAC,IAAD,CAAQL,UAAQ,EAACM,GAAG,KAAKC,QAAQ,YACjC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACT,UAAQ,GACjB,kBAACQ,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,mBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,qBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,qBAGJ,kBAACL,EAAA,EAAKI,OAAN,KACE,kBAAC,IAAD,CAAQL,UAAQ,EAACM,GAAG,KAAKC,QAAQ,eACjC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACT,UAAQ,GACjB,kBAACQ,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,wBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,oBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,2BAIN,kBAACL,EAAA,EAAKE,IAAN,KACE,6W,kDC7BJQ,EAAS5B,YAAOY,IAAPZ,CAAkB,CAC/B6B,UAAW,UAGPC,EAAmB9B,YAAOY,IAAPZ,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAGVC,EAAYjC,YAAOkC,IAAPlC,CAAc,CAC9BmC,MAAO,mBAGHC,EAAapC,YAAOkB,IAAPlB,CAAa,CAC9BqC,QAAS,QACTN,UAAW,qBA4CEO,EAzCE,SAAA3C,GAAU,IAAD,EACc4C,IAAMC,SAAS,IAD7B,mBACjBC,EADiB,KACJC,EADI,KAQlBC,EAAY,sCAAG,WAAOvE,EAAP,kBAAAwE,EAAA,qDAAYC,EAAZ,EAAYA,MAC/BH,EAAeG,GADI,yCAAH,wDAIlB,OACE,kBAACjB,EAAD,KACE,kBAACE,EAAD,KACE,kBAACM,EAAD,CAAYU,cAAc,SAASC,UAAQ,GACzC,kBAAC7B,EAAA,EAAKE,IAAN,KACE,gEAEF,kBAACF,EAAA,EAAKE,IAAN,KACE,kBAACa,EAAD,CACEe,YAAY,gDACZH,MAAOJ,EACPQ,SAAUN,EACVO,WArBW,SAAAC,GACH,UAAdA,EAAMC,KACRzD,EAAM0D,QAAQC,KAAd,oBAAgCb,OAqB1B,kBAACc,EAAA,EAAD,CACEC,SAAS,QACTC,SAAO,EACPlC,GAAImC,IACJ7C,GAAE,oBAAe4B,IAJnB,e,wGCjDL,SAAekB,EAAtB,kC,2CAAO,WAAyBC,GAAzB,SAAAhB,EAAA,8EACIiB,MAAMD,GACRE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFlB,0C,ykBCIA,IAAMC,EAAkB,CAC3BC,GAAI,KACJC,SAAU,iBACVC,GAAI,IACJC,GAAI,IACJC,KAAM,KACNC,KAAM,MAGGC,GAAkB,CAC3BC,IAAK,MACLC,KAAM,QAGGC,GAOT,WAAYC,GAAS,oBACjB,IAAMC,EAAa,IAAIxG,MAAJ,kEAAqEuG,IAGxF,GAAIA,aAAkBE,MAElB,GAAsB,IAAlBF,EAAOG,OACPrF,KAAKsF,WAAaJ,EAAO,GACzBlF,KAAKuF,SAAWhB,EAAgBC,GAChCxE,KAAKmD,MAAQ+B,EAAO,OAEjB,IAAsB,IAAlBA,EAAOG,OAed,MAAMF,EAbN,IAAIK,OAAOC,OAAOlB,GAAiBmB,SAASR,EAAO,IAM/C,MAAM,IAAIvG,MAAJ,qEACiCuG,EAAO,GADxC,uEAEkCM,OAAOC,OAAOlB,GAFhD,2BAJNvE,KAAKsF,WAAaJ,EAAO,GACzBlF,KAAKuF,SAAWL,EAAO,GACvBlF,KAAKmD,MAAQ+B,EAAO,OAWzB,MAAIA,aAAkBM,QA0BzB,MAAML,EAxBN,GACID,EAAOI,YACPJ,EAAOK,UACPL,EAAO/B,MACT,CACE,IAAIqC,OAAOC,OAAOlB,GAAiBmB,SAASR,EAAOK,UAK/C,MAAM,IAAI5G,MAAJ,qEACiCuG,EAAOK,SADxC,uEAEkCC,OAAOC,OAAOlB,GAFhD,2BAJNvE,KAAKsF,WAAaJ,EAAOI,WACzBtF,KAAKuF,SAAWL,EAAOK,SACvBvF,KAAKmD,MAAQ+B,EAAO/B,UAQrB,KAAI+B,EAAOI,aAAcJ,EAAO/B,MAKnC,MAAMgC,EAJNnF,KAAKsF,WAAaJ,EAAOI,WACzBtF,KAAKuF,SAAWhB,EAAgBC,GAChCxE,KAAKmD,MAAQ+B,EAAO/B,SAUvBwC,GAST,WAAYC,GAAK,oBACb,IDzFiBC,ECyFXV,EAAa,IAAIxG,MAAJ,kEAAqEiH,IAGxF,GD3FiB,kBADAC,EC4FJD,ID3FgBC,aAAaC,OC4FtC9F,KAAKsF,WAAaM,EAClB5F,KAAKuF,SAAWT,GAAgBE,UAC7B,GAAIY,aAAcR,MAErB,GAAkB,IAAdQ,EAAGP,OACHrF,KAAKsF,WAAaM,EAAG,GACrB5F,KAAKuF,SAAWT,GAAgBE,SAE7B,IAAkB,IAAdY,EAAGP,OAcV,MAAMF,EAZN,IAAIK,OAAOC,OAAOX,IAAiBY,SAASE,EAAG,IAK3C,MAAM,IAAIjH,MAAJ,qEACiCiH,EAAG,GADpC,uEAEkCJ,OAAOC,OAAOX,IAFhD,2BAHN9E,KAAKsF,WAAaM,EAAG,GACrB5F,KAAKuF,SAAWK,EAAG,OAWxB,MAAIA,aAAcJ,QAuBrB,MAAML,EArBN,GACIS,EAAGN,YACHM,EAAGL,SACL,CACE,IAAIC,OAAOC,OAAOX,IAAiBY,SAASE,EAAGL,UAI3C,MAAM,IAAI5G,MAAJ,qEACiCiH,EAAGL,SADpC,uEAEkCC,OAAOC,OAAOX,IAFhD,2BAHN9E,KAAKsF,WAAaM,EAAGN,WACrBtF,KAAKuF,SAAWK,EAAGL,aAQpB,KAAIK,EAAGN,WAIV,MAAMH,EAHNnF,KAAKsF,WAAaM,EAAGN,WACrBtF,KAAKuF,SAAWT,GAAgBE,QAoGnCe,GAAK,I,WAtFd,WAAYC,GAAc,oBAEtBhG,KAAKgG,YAAcA,EAGnBC,IAASC,cAAclG,KAAKgG,aAG5BhG,KAAKmG,WAAaF,IAASG,Y,kGAQXC,EAAOpH,G,+FAEDe,KAAKmG,WAClBG,WAAWD,GACXE,IAAItH,GACJuH,M,cAHCnC,E,yBAKCA,EAAIoC,Q,yDAEJC,QAAQC,OAAR,O,0MAQWC,G,6EAChBC,EAAU,GAChBD,EAAaE,QAAQ,SAAAP,GACjB,IAAME,EAAOF,EAAIE,OACXM,EAAS,GACb9H,GAAIsH,EAAItH,IACLwH,GAELI,EAAQjD,KAAKmD,K,kBAEVF,G,gLAUaR,G,iGAAOW,E,+BAAU,GAAIC,E,oCAAUC,EAAWC,E,+BAAQ,I,SAG9DC,EAAMpH,KAAKmG,WAAWG,WAAWD,GAGrCW,EAAQF,QAAQ,SAAA5B,GACZkC,EAAMA,EAAIC,MAAMnC,EAAOI,WAAYJ,EAAOK,SAAUL,EAAO/B,SAI3D8D,IACAG,EAAMA,EAAIH,QAAQA,EAAQ3B,WAAY2B,EAAQ1B,WAIlD6B,EAAMA,EAAID,MAAMA,G,UAGEC,EAAIZ,MACjBc,MAAM,SAAAC,GACH,MAAM,IAAI5I,MAAJ,wDAA2D4I,M,eAFnElD,E,iBAMOrE,KAAKwH,oBAAoBnD,G,oGAE/BqC,QAAQC,OAAR,O,8HAMD,CAAa,CAC3Bc,OAAQ,0CACRC,WAAY,0BACZC,UAAW,cACXC,YAAa,mC,ujBC5OjB,IAAMC,GAAU5B,IAAS4B,UAElB,SAAeC,KAAtB,gC,6CAAO,sBAAA5E,EAAA,qEACQ6C,GAAGgC,kBAAkB,QAAS,GAAI,IAAIpC,GAAe,CAAC,iBAAkBb,GAAgBE,QADhG,kF,sBAIA,SAAegD,GAAtB,qC,6CAAO,WAA+BC,EAASC,GAAxC,eAAAhF,EAAA,8EAEwB6C,GAAGgC,kBAC5B,qBACA,CAAC,IAAI9C,GAAe,CAAC,WAAYV,EAAgBC,GAAIyD,KACrD,IAAItC,GAAe,CAAC,QAASuC,KAL5B,cAEGC,EAFH,yBAOIA,GAPJ,yDASIzB,QAAQC,OAAR,OATJ,gE,sBAaA,SAAeyB,GAAtB,mC,6CAAO,WAAmCC,GAAnC,iBAAAnF,EAAA,8EAEuB6C,GAAGuC,cAAc,eAAgBD,EAAiBE,iBAFzE,cAEGC,EAFH,gBAG4BzC,GAAGgC,kBAChC,oBACA,CAAC,IAAI9C,GAAe,CAAC,kBAAmBV,EAAgBC,GAAI6D,EAAiBE,mBAC7E,IAAI5C,GAAe,CAAC,OAAQb,GAAgBC,OAN3C,cAGG0D,EAHH,+BAUEJ,EAVF,CAWDK,aAAa,IACXzJ,GAAIoJ,EAAiBE,iBAClBC,EAFO,CAGVG,KAAMF,OAdP,2DAkBI/B,QAAQC,OAAR,OAlBJ,iE,sBAsBA,SAAeiC,GAAtB,mC,6CAAO,WAA4BC,GAA5B,eAAA3F,EAAA,8EAEgB6C,GAAGuC,cAAc,OAAQO,GAFzC,cAEGC,EAFH,yBAGIA,GAHJ,yDAKIpC,QAAQC,OAAR,OALJ,wD,sBASA,SAAeoC,GAAtB,mC,6CAAO,WAA0Cd,GAA1C,yBAAA/E,EAAA,8EAE6B6C,GAAGgC,kBACjC,aACA,CAAC,IAAI9C,GAAe,CAAC,WAAYV,EAAgBC,GAAIyD,MAJpD,0CAEIe,EAFJ,cAO8BjD,GAAGuC,cAAc,OAAQU,EAAgBC,SAPvE,cAOGC,EAPH,OAUGC,EAActB,GAAQuB,WAAWF,EAAmBG,KAVvD,UAWsBF,EACtBG,iBACAlF,KAAK,SAAAF,GAAG,OAAID,EAAUC,KAbtB,eAWGqF,EAXH,yBAcIA,GAdJ,2DAgBI7C,QAAQC,OAAR,OAhBJ,yD,sBAoBA,SAAe6C,GAAtB,mC,6CAAO,WAAgCC,GAAhC,uBAAAvG,EAAA,4DACCwG,EAA2BD,EAAavE,OAC5C,SAAAyE,GAAM,OAAwB,OAApBA,EAAOC,WAGbC,EAAiB,GACvBH,EAAyB5C,QAAQ,SAAAgD,GAC/BD,EAAejG,KAAK,CAClBmG,OAAQD,EAAKpB,aAAaqB,OAC1BC,KAAMF,EAAKpB,aAAasB,KACxB/K,GAAI6K,EAAK7K,GACT2K,SAAUE,EAAKF,SACfK,MAAOH,EAAKG,UAIVC,EAAeL,EAAeM,IAAI,SAAAL,GAAI,OAC1C/D,GAAGgC,kBACD,OACA,CAAC,IAAI9C,GAAe,CAAC,wBAAyBV,EAAgBC,GAAIsF,EAAK7K,SAnBtE,SAuByByH,QAAQ0D,IAAIF,GAvBrC,cAuBCG,EAvBD,gBAyBmBtE,GAAGgC,kBAAkB,UAzBxC,cAyBCuC,EAzBD,OA2BLT,EAAe/C,QAAQ,SAACgD,EAAMS,GAC5B,IAAMC,EAAQH,EAAgBE,GACxBE,EAAgB,GACtBD,EAAM1D,QAAQ,SAAA4D,GACZ,IAAMC,EAASL,EAAUM,KAAK,SAAAD,GAAM,OAAIA,EAAO1L,KAAOyL,EAAKG,YAC3DJ,EAAc7G,KAAK,CACjBgG,SAAUc,EAAKd,SACfiB,UAAWH,EAAKG,UAChBC,UAAWH,EAAOG,cAItBhB,EAAKiB,yBAA2BC,iBAAOP,EAAe,SAAAC,GAAI,OAAIA,EAAKI,cAvChE,kBA0CEjB,GA1CF,2C,sBA6CA,SAAeoB,GAAtB,mC,6CAAO,WAA4BhM,GAA5B,yBAAAiE,EAAA,8EAEiB6C,GAAGuC,cAAc,QAASrJ,GAF3C,cAEGwE,EAFH,gBAGgBmF,GAAanF,EAAMyH,SAHnC,cAGGpC,EAHH,gBAImBd,GAAgB/I,EAAI6F,GAAgBC,KAJvD,cAIGoG,EAJH,iBAKwBzE,QAAQ0D,IACjCe,EAAQhB,IAAI,SAAAR,GAAM,OAAIvB,GAAoBuB,MANzC,eAKGF,EALH,iBAQsBV,GAA2B9J,GARjD,eAQGsK,EARH,iBASiBC,GAAiBC,GATlC,eASGe,EATH,yBAWI,CACLvL,KACA+K,KAAMlB,EAAKkB,KACXoB,YAAatC,EAAKsC,YAClBC,SAAU5H,EAAM6H,UAChBC,KAAMC,IACHC,IAAIhI,EAAMiI,eAAeC,YACzBC,cACHT,QAAS1B,EACTF,WAAYA,EAAW9C,KACvBoF,UAAWpI,EAAMqI,WACjBtB,MAAOA,IAtBN,2DAyBI9D,QAAQC,OAAR,OAzBJ,yD,sBA6BA,SAAeoF,GAAtB,mC,6CAAO,WAAiC9M,GAAjC,iBAAAiE,EAAA,8EAEiB6C,GAAGuC,cAAc,QAASrJ,GAF3C,cAEGwE,EAFH,gBAGgBmF,GAAanF,EAAMyH,SAHnC,cAGGpC,EAHH,yBAKI,CACL7J,KACA+K,KAAMlB,EAAKkB,KACXoB,YAAatC,EAAKsC,YAClBG,KAAMC,IACHC,IAAIhI,EAAMiI,eAAeC,YACzBC,gBAXF,2DAcIlF,QAAQC,OAAR,OAdJ,yD,sBAkBA,SAAeqF,GAAtB,mC,6CAAO,WAAsCC,GAAtC,yBAAA/I,EAAA,4DACCgJ,EAAW,EADZ,SAGHC,IAAQC,cAAcC,SAEhBC,EAAgBL,EAAKM,kBALxB,SAQmB7F,QAAQ0D,IAC5BkC,EAAcnC,IAAI,SAAAqC,GAAY,OAC5BzG,GAAGgC,kBACD,qBACA,CAAC,IAAI9C,GAAe,CAAC,OAAQV,EAAgBC,GAAIgI,SAZpD,cAQGC,EARH,OAkBGC,EAA4BC,oBAChCC,kBAAQC,kBAAQJ,GAAU,SAAAK,GAAK,OAAIA,EAAMC,WACzC,SAACC,EAAkBtJ,GAAnB,OACEsJ,EAAiBC,OACf,SAACC,EAASpD,GAAV,aACKoD,EADL,CAEE/J,MAAO+J,EAAQ/J,MAAQ2G,EAAK3G,SAE9B,CAAE4J,SAAUrJ,EAAKP,MAAO,MAKxBgK,EAAsBC,kBAC1BpC,iBACE9F,iBAAOwH,EAA2B,qBAAGvJ,OAAqB+I,IAC1D,qBAAG/I,SAlCJ,UAuCkBuD,QAAQ0D,IAC3B+C,EAAoBhD,IAAI,mBAAkB4B,GAAlB,EAAGgB,aAxC1B,eAuCGM,EAvCH,yBA2CIA,GA3CJ,2DA6CI3G,QAAQC,OAAR,OA7CJ,yD,6kBCtKA,SAAe2G,KAAtB,gC,6CAAO,4BAAApK,EAAA,qEACmB6C,GAAGgC,kBACzB,SACA,GACA,IAAIpC,GAAe,CAAC,YAAab,GAAgBC,OAJ9C,cACCuF,EADD,yBAMEA,GANF,0C,sBAeA,SAAeiD,GAAtB,mC,6CAAO,WAAiCC,GAAjC,mCAAAtK,EAAA,4DACCuK,EAAiB,GADlB,SAEgB1H,GAAGuC,cAAc,SAAUkF,GAF3C,cAEC7C,EAFD,gBAGe5E,GAAGgC,kBACrB,OACA,CAAC,IAAI9C,GAAe,CAAC,YAAaV,EAAgBC,GAAIgJ,MALnD,cAGChD,EAHD,OAOCkD,EAA4BlD,EAAML,IAAI,SAAAO,GAAI,OAAI3E,GAAGuC,cAAc,qBAAsBoC,EAAKiD,yBAP3F,UAQ2BjH,QAAQ0D,IAAIsD,GARvC,eAQCE,EARD,OASCC,EAAuBD,EAAkBzD,IAAI,SAAAL,GAAI,OAAI/D,GAAGuC,cAAc,eAAgBwB,EAAKvB,mBAT5F,UAUsB7B,QAAQ0D,IAAIyD,GAVlC,eAUCpE,EAVD,OAaCqE,EAAiBF,EAAkBzD,IAAI,SAAAL,GAAI,OAAI/D,GAAGuC,cAAc,QAASwB,EAAKiD,YAb/E,UAcgBrG,QAAQ0D,IAAI0D,GAd5B,eAcCT,EAdD,iBAemBtH,GAAGgC,kBAAkB,QAfxC,eAeCgG,EAfD,OAiBLvD,EAAM1D,QAAQ,SAACkH,EAAUzD,GACvB,IAAM0D,EAAkBL,EAAkBrD,GACpC2D,EAAazE,EAAac,GAC1B9G,EAAQ4J,EAAO9C,GACfzB,EAAOiF,EAAUnD,KAAK,SAAAd,GAAI,OAAIA,EAAK7K,KAAOwE,EAAMyH,UAEhDiD,EAAgB,CACpBlP,GAAI+O,EAAS/O,GACb8K,OAAQmE,EAAWnE,OACnBC,KAAMkE,EAAWlE,KAEjBoE,cAAeJ,EAASpE,SAExBA,SAAUqE,EAAgBrE,SAC1B3B,QAASgG,EAAgBlB,SACzB9C,MAAOgE,EAAgBhE,MACvBoE,UAAW7C,IAAOC,IAAIhI,EAAMiI,eAAeC,YAAYC,cACvD0C,UAAWxF,EAAKkB,MAGlByD,EAAe7J,KAAKuK,KAEhBI,EAActH,kBAAQwG,EAAgB,CAAC,YAAa,SAAU,CAAC,OAAQ,SAvCxE,wBAwCO9C,EAxCP,CAwCeH,MAAO+D,KAxCtB,2C,oCCZQC,GAJK,SAACjD,GACnB,OAAOC,IAAOC,IAAIF,GAAMkD,OAAO,wBCE3BC,GAAapO,YAAOqO,KAAPrO,CAAa,CAC9BsO,UAAW,oBAGPC,GAAoBvO,YAAOqO,KAAKG,QAAZxO,CAAqB,CAC7CK,QAAS,iBAeIoO,GAZG,SAAC,GAAD,IAAG/E,EAAH,EAAGA,KAAMuB,EAAT,EAASA,KAAMH,EAAf,EAAeA,YAAapJ,EAA5B,EAA4BA,KAA5B,OAChB,kBAAC0M,GAAD,CAAYM,OAAK,GACf,kBAACH,GAAD,KACE,kBAACF,GAAA,EAAK7N,OAAN,KACE,kBAAC,IAAD,CAAMK,GAAIa,GAAOgI,IAEnB,kBAAC2E,GAAA,EAAKM,KAAN,KAAYT,GAAYjD,IACxB,kBAACoD,GAAA,EAAKO,YAAN,KAAmB9D,MCDV+D,GAhBQ,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OACxB,OACE,kBAACsB,GAAA,EAAKS,MAAN,CAAY/L,UAAQ,GACjBgK,EAAOlD,IAAI,gBAAGH,EAAH,EAAGA,KAAMuB,EAAT,EAASA,KAAMH,EAAf,EAAeA,YAAanM,EAA5B,EAA4BA,GAA5B,OACV,kBAAC,GAAD,CACEyE,IAAKzE,EACL+K,KAAMA,EACNuB,KAAMA,EACNH,YAAaA,EACbpJ,KAAI,kBAAa/C,SCAZoQ,OAXf,SAA0BC,GACxBzM,IAAM0M,UAAU,WAGd,OAFAC,SAASF,MAAQA,EAEV,WACLE,SAASF,MAAQ,mCAElB,CAACA,KCDAG,GAAgBnP,IAAOoP,IAAI,CAC/BC,OAAQ,yBAEJpN,GAAYjC,YAAOkC,IAAPlC,CAAc,CAC9BmC,MAAO,iBACPH,aAAc,QAGVsN,GAAoBtP,IAAOuP,KAAK,CACpClN,QAAS,QACT9B,MAAO,OACPiP,YAAa,SAGTC,GAAgBzP,IAAOoP,IAAI,CAC/BI,YAAa,SAGTE,GAAa1P,YAAO2P,IAAP3P,CAAe,CAChCe,WAAY,oBA6EC6O,GA1EiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACPtN,IAAMC,SAASqN,GADR,mBACtCpN,EADsC,KACzBC,EADyB,OAEGH,IAAMC,UAAS,GAFlB,mBAEtCsN,EAFsC,KAEpBC,EAFoB,OAGXxN,IAAMC,SAAS,IAHJ,mBAGtCwN,EAHsC,KAG3BC,EAH2B,OAIH1N,IAAMC,SAAS,IAJZ,mBAItC0N,EAJsC,KAIvBC,EAJuB,KAK7CpB,GAAiB,YAAD,OAAatM,IAY7BF,IAAM0M,UAAU,WACd,qBAAC,4BAAArM,EAAA,yDACKH,EADL,uBAEGsN,GAAoB,GAFvB,SAG+BrE,GAAuBjJ,GAHtD,OAGS2N,EAHT,OAKGH,EAAaG,GACbD,EAAiBC,GACjBL,GAAoB,GAPvB,wCAAD,IAUC,IAEH,IAAMpN,EAAY,sCAAG,WAAOvE,EAAP,oBAAAwE,EAAA,4DAAYC,EAAZ,EAAYA,MAC/BH,EAAeG,GACfkN,GAAoB,GAFD,SAGSrE,GAAuB7I,GAHhC,OAGbuN,EAHa,OAKnBH,EAAaG,GACbD,EAAiBC,GACjBL,GAAoB,GAPD,yCAAH,wDAmBlB,OACE,kBAAC,IAAMtP,SAAP,KACE,kBAAC0O,GAAD,KACE,kBAAC,GAAD,CACEnM,YAAY,uBACZH,MAAOJ,EACPQ,SAAUN,EACV0N,QAASP,IAEX,kBAACJ,GAAD,CACE1M,YAAY,uBACZlE,QApBc,CACpB,CAAEsE,IAAK,KAAMP,MAAO,MAAOyN,KAAM,OACjC,CAAElN,IAAK,OAAQP,MAAO,OAAQyN,KAAM,aACpC,CAAElN,IAAK,IAAKP,MAAO,IAAKyN,KAAM,cAC9B,CAAElN,IAAK,IAAKP,MAAO,IAAKyN,KAAM,iBAC9B,CAAElN,IAAK,IAAKP,MAAO,IAAKyN,KAAM,iBAC9B,CAAElN,IAAK,KAAMP,MAAO,KAAMyN,KAAM,cAe1BrN,SAtDiB,SAAC7E,EAAD,GAAmB,IAAbyE,EAAY,EAAZA,MAC7B,GAAc,QAAVA,EACFsN,EAAiBH,OACZ,CACL,IAAMO,EAAiBrF,IAAOC,MAAMqF,SAAS3N,EAAO,UAEpDsN,EAAiBH,EAAUpL,OAAO,mBADlB,SAAAqG,GAAI,OAAIC,IAAOC,IAAIF,GAAMwF,QAAQF,GACDE,CAAd,EAAGxF,aAkDlB,KAAhBxI,GACC,kBAAC6M,GAAD,KAAoBY,EAAcnL,OAAlC,aAGJ,kBAAC0K,GAAD,KACE,kBAAC,GAAD,CAAgB1C,OAAQmD,OC5F1BtO,GAAS5B,YAAOY,IAAPZ,CAAkB,CAC/B6B,UAAW,UAGPC,GAAmB9B,YAAOY,IAAPZ,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAcD0O,GAXA,SAAC,GAAkB,IAAhBrR,EAAe,EAAfA,SACRsR,EAAMC,IAAYC,MAAMxR,EAASyR,QAAjCH,EACR,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgBd,MAAOc,O,iDCFhBI,OAlBf,SAAgBC,GACdA,EAAUC,SAASD,EAAS,IAC5B,IAAIE,EAAQC,KAAKC,MAAMJ,EAAU,MAC7BnG,EAAUsG,KAAKC,OAAOJ,EAAkB,KAARE,GAAgB,IAChDG,EAAUL,EAAkB,KAARE,EAAyB,GAAVrG,EAWvC,OATIqG,EAAQ,KACVA,EAAQ,IAAMA,GAEZrG,EAAU,KACZA,EAAU,IAAMA,GAEdwG,EAAU,KACZA,EAAU,IAAMA,GAEXH,EAAQ,IAAMrG,EAAU,IAAMwG,GCPjCC,GAAiBtR,IAAOoP,IAAI,CAChC/M,QAAS,OACTkP,SAAU,OACVC,WAAY,SACZnC,OAAQ,QACRhP,QAAS,UAGLoR,GAAqBzR,IAAOoP,IAAI,SAAAzP,GAAK,MAAK,CAC9CwC,MAAOxC,EAAM+R,SAAW,OAAS,MACjCC,MAAOhS,EAAM+R,SAAW,IAAM,IAC9BE,UAAW,aACXC,SAAU,OACVC,WAAY,QACZ,0BAA2B,CACzB3P,MAAO,OACPwP,MAAO,QAILI,GAAY/R,IAAOoP,IAAI,SAAAzP,GAAK,MAAK,CACrCwC,MAAOxC,EAAM+R,SAAW,OAAS,MACjCC,MAAOhS,EAAM+R,SAAW,IAAM,IAC9BE,UAAW,aACXvR,QAASV,EAAM+R,SAAW,IAAM,QAChC,0BAA2B,CACzBvP,MAAO,OACP9B,QAAS,IACTsR,MAAO,QAwGIpP,OAAMyP,KApGG,SAAC,GAKlB,IAJLC,EAII,EAJJA,WACAhJ,EAGI,EAHJA,WACAiJ,EAEI,EAFJA,WACAR,EACI,EADJA,SAEMS,EAAoB5P,IAAM6P,OAAO,MAEjCC,EAAQ,IAAIC,KAAkB,CAClCC,YAAY,EACZC,cAAe,MAGjBjQ,IAAM0M,UAAU,WACd,IAAMwD,EAA6B,WAC7BN,EAAkBvF,SACpBuF,EAAkBvF,QAAQ8F,kBAI9B,OADAxD,SAASyD,iBAAiB,yBAA0BF,GAC7C,WACLvD,SAAS0D,oBAAoB,yBAA0BH,KAExD,IAEH,IAAMI,EAAW,WACfR,EAAMS,YAGF1R,EAAM,SAAC,GAAD,IAAGuI,EAAH,EAAGA,MAAOoJ,EAAV,EAAUA,OAAQ3P,EAAlB,EAAkBA,IAAKtC,EAAvB,EAAuBA,MAAvB,OACV,kBAAC,KAAD,CACEsC,IAAKA,EACLiP,MAAOA,EACPU,OAAQA,EACRC,YAAa,EACbC,SAAUtJ,GAEV,yBAAK7I,MAAOA,GACV,kBAACwQ,GAAD,KACE,kBAACS,GAAD,CAAWL,SAAUA,GACnB,kBAACnO,EAAA,EAAD,CAAQ2P,KAAK,OAAOC,QAAS,kBAAMjB,EAAWjJ,EAAWU,GAAOyJ,cAC9D,kBAACC,GAAA,EAAD,CAAM3J,KAAK,SACVqH,GAAO9H,EAAWU,GAAOyJ,cAG9B,kBAAC3B,GAAD,CAAoBC,SAAUA,GAC5B,kBAAC,KAAD,CACE4B,YAAa,CAACrB,GACdsB,YAAY,EACZC,gBAAiBvK,EAAWU,GAAO2G,YAQ/C,OAAIoB,EAEA,kBAAC,KAAD,CAAWmB,SAAUA,GAClB,gBAAG1Q,EAAH,EAAGA,MAAOsR,EAAV,EAAUA,OAAV,OACC,kBAAC,KAAD,CACEC,yBAA0BrB,EAC1BoB,OAAQA,EACRE,SAAU1K,EAAWlE,OACrB6O,UAAWvB,EAAMuB,UACjBC,YAAazS,EACb0S,cAAe,EACfhT,MAAO,CAAEiT,WAAY,IACrB5R,MAAOA,MAOb,kBAAC,KAAD,CAAgB2E,IAAKqL,GAClB,gBAAGsB,EAAH,EAAGA,OAAQO,EAAX,EAAWA,YAAaC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,UAAvC,OACC,kBAAC,KAAD,CAAWC,eAAa,EAACtB,SAAUA,GAChC,gBAAG1Q,EAAH,EAAGA,MAAH,OACC,kBAAC,KAAD,CACEiS,YAAU,EACVV,yBAA0BrB,EAC1BoB,OAAQA,EACRO,YAAaA,EACbK,SAAUJ,EACVN,SAAU1K,EAAWlE,OACrB6O,UAAWvB,EAAMuB,UACjBC,YAAazS,EACb8S,UAAWA,EACXpT,MAAO,CAAEiT,WAAY,IACrB5R,MAAOA,UChIRmS,GAHK,eAACC,EAAD,uDAAU,GAAIC,EAAd,uDAA0B,GAA1B,OACyC,IAA3DD,EAAOE,cAAcC,QAAQF,EAAUC,gBCKnCE,GAAoB3U,IAAOoP,IAAI,CACnCC,OAAQ,QACRlN,MAAO,OACPE,QAAS,OACTuS,cAAe,SACfhD,UAAW,aACX,oDAAqD,CACnDzP,MAAO,MACPkN,OAAQ,OAINwF,GAAY7U,IAAO8U,GAAG,CAAE3S,MAAO,SAE/B4S,GAAc/U,YAAOkC,IAAPlC,CAAc,CAChCmC,MAAO,OACP0P,SAAU,kBACVC,WAAY,mBAGRxC,GAAoBtP,IAAOuP,KAAK,CACpClN,QAAS,QACTN,UAAW,MACXxB,MAAO,OACPiP,YAAa,SAGTwF,GAA8BhV,IAAOuP,KAAK,CAC9ClN,QAAS,QACTN,UAAW,MACX8P,SAAU,kBACVC,WAAY,iBACZtC,YAAa,SAGTyF,GAAuBjV,IAAOoP,IAAI,CACtCrN,UAAW,MACXmT,OAAQ,sBACR9U,aAAc,UACdwR,UAAW,aACX/P,UAAW,qBACX,oDAAqD,CACnDsT,KAAM,WACNtT,UAAW,OAoDAuT,GAhDK,SAAC,GAId,IAHLnM,EAGI,EAHJA,WACAiJ,EAEI,EAFJA,WACAmD,EACI,EADJA,oBACI,EACoD9S,IAAMC,SAAS,IADnE,mBACG8S,EADH,KACyBC,EADzB,KAUEC,EAAkBvM,EAAWrE,OAAO,gBAAG0L,EAAH,EAAGA,KAAH,OAAcgE,GAAYhE,EAAMgF,KAE1E,OACE,kBAACX,GAAD,KACE,kBAACE,GAAD,0BACA,kBAACE,GAAD,CACE9R,SAbyB,SAAC7E,EAAD,GAAmB,IAAbyE,EAAY,EAAZA,MACnC0S,EAAwB1S,GACpBwS,GACFnG,SAASuG,cAAc,IAAIC,YAAY,4BAWrC7S,MAAOyS,EACPtS,YAAY,sBAEY,KAAzBsS,GACC,kBAAC,GAAD,KACGE,EAAgBzQ,OADnB,YAIwB,KAAzBuQ,GAA+BE,EAAgBzQ,OAAS,GACvD,kBAACkQ,GAAD,KACE,kBAAC,GAAD,CACEhD,WAAYqD,EACZrM,WAAYuM,EACZtD,WAAYA,EACZR,UAAU,KAIU,KAAzB4D,GACC,kBAACN,GAAD,8C,oBC1FFW,GAAa3V,IAAO4V,GAAG,CAC3BC,kBAAmB,UACnBrG,YAAa,UAGTsG,GAAc9V,IAAOoP,IAAI,CAC7ByC,SAAU,MACVkE,WAAY,QAGRC,GAAoBhW,IAAOoP,IAAI,CACnCyC,SAAU,WAGNoE,GAAWjW,IAAOkW,GAAG,CACzBL,kBAAmB,UACnBM,cAAe,OACf3G,YAAa,QA+BA4G,GA5BM,SAAC,GAGf,IAFLvL,EAEI,EAFJA,QACAU,EACI,EADJA,UAEA,OACE,kBAAC,IAAM9K,SAAP,KACE,uCACA,kBAACkV,GAAD,KACG9K,EAAQhB,IAAI,gBAAGzB,EAAH,EAAGA,aAAH,OACX,wBAAIhF,IAAKgF,EAAazJ,IACpB,kBAACmX,GAAD,KAAc1N,EAAaqB,OAASrB,EAAaqB,OAASrB,EAAasB,MACtEtB,EAAaqB,QAAUrB,EAAaqB,SAAWrB,EAAasB,MAAQ,kBAACsM,GAAD,KAAoB5N,EAAasB,MACrGtB,EAAaC,KAAKtD,OAAS,GAAK,kBAACkR,GAAD,KAC9B7N,EAAaC,KAAKwB,IAAI,gBAAGlL,EAAH,EAAGA,GAAI+K,EAAP,EAAOA,KAAMX,EAAb,EAAaA,IAAb,OACrB,wBAAI3F,IAAKzE,GACP,uBAAG0X,OAAO,SAASC,IAAI,sBAAsBC,KAAMxN,GAAMW,WAOrE,qCACA,uBAAG6M,KAAMhL,GAAT,gC,UCxCAiL,GAAU,CACd,CACEC,SAAU,SACVnG,KAAM,SACNnO,MAAO,KAET,CACEsU,SAAU,WACVnG,KAAM,WACNnO,MAAO,KAET,CACEsU,SAAU,OACVnG,KAAM,OACNnO,MAAO,KAET,CACEsU,SAAU,gBACVnG,KAAM,OACNnO,MAAO,MAILuU,GAAY1W,YAAO,MAAPA,CAAc,CAC9BqC,QAAS,SAGLsU,GAAS3W,YAAO,MAAPA,CAAc,CAC3BmC,MAAO,QAGHyU,GAAW5W,YAAO,MAAPA,CAAc,CAC7BmC,MAAO,QAGH0U,GAAoB7W,YAAO8W,KAAMtW,OAAbR,CAAqB,CAC7C,0BAA2B,CACzBqC,QAAS,qBAqEE0U,GAhEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAf,OAClB,kBAACH,GAAA,EAAD,CAAOI,SAAO,GACZ,kBAACL,GAAD,KACE,kBAACC,GAAA,EAAM1V,IAAP,KACGoV,GAAQ3M,IAAI,SAAAsN,GAAc,OAAK,kBAACL,GAAA,EAAMM,WAAP,CAC9BhU,IAAK+T,EAAe7G,MAAO6G,EAAe7G,QAI3C2G,GAAY,kBAACH,GAAA,EAAMM,WAAP,CAAkBhU,IAAK,SAAvB,WAGjB,kBAAC0T,GAAA,EAAMO,KAAP,KACGL,EAAWnN,IAAI,SAAAyN,GAAW,OACzB,kBAACR,GAAA,EAAM1V,IAAP,CAAWgC,IAAKkU,EAAY3Y,IACzB6X,GAAQ3M,IAAI,SAAAsN,GACX,MAAgC,kBAA5BA,EAAeV,SAEf,kBAACK,GAAA,EAAMS,KAAP,CAAYnU,IAAK+T,EAAeV,SAAUtU,MAAOgV,EAAehV,OAC7DmV,EAAYH,EAAeV,WAI9Ba,EAAY7M,yBAEZ,kBAACqM,GAAA,EAAMS,KAAP,CAAYnU,IAAK+T,EAAeV,SAAUtU,MAAOgV,EAAehV,OAC7DmV,EAAY7M,yBAAyBZ,IAAI,SAAA2N,GACxC,OACE,kBAACd,GAAD,CAAWtT,IAAKoU,EAAOhN,WACrB,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAM3J,GAAE,kBAAa2W,EAAOjN,YACzBiN,EAAOhN,YAGZ,kBAACoM,GAAD,KACGY,EAAOlO,cASlB,kBAAC,IAAM7I,SAAP,CAAgB2C,IAAK+T,EAAeV,UAClC,kBAACK,GAAA,EAAMS,KAAP,CAAYpV,MAAO,KAChBmV,EAAYxJ,eAEf,kBAACgJ,GAAA,EAAMS,KAAP,KACE,kBAAC,IAAD,CAAM1W,GAAE,kBAAayW,EAAY3P,UAC/B,8BAAO2P,EAAYtJ,YAErB,6BAAME,GAAYoJ,EAAYvJ,sBC7F5C0J,GAAkBzX,IAAOoP,IAAI,CACjCC,OAAQ,QACRlN,MAAO,OACP0P,SAAU,OACVC,WAAY,MACZ,SAAU,CACRD,SAAU,sBAIR6F,GAAkB1X,YAAO2X,KAAP3X,CAAa,CACnC4X,aAAc,eACd5V,aAAc,iBACd6V,WAAY,iBACZvX,gBAAiB,mBACjBwX,OAAQ,eACR3V,MAAO,SAwDMI,OAAMyP,KArDH,SAAC,GAQZ,IAPLnH,EAOI,EAPJA,QACAU,EAMI,EANJA,UACAtC,EAKI,EALJA,WACAiB,EAII,EAJJA,MACAgI,EAGI,EAHJA,WACA6F,EAEI,EAFJA,UACA1C,EACI,EADJA,oBACI,EACgC9S,IAAMC,SAAS,WAD/C,mBACGwV,EADH,KACeC,EADf,KAEEC,EAAa3V,IAAM6P,OAAO,MAEhC7P,IAAM0M,UAAU,WACEiJ,EAAWtL,QAAQuL,wBACvBC,IAAM,IAChBF,EAAWtL,QAAQyL,gBAAe,GAC7BhD,GACHjW,OAAOkZ,SAAS,GAAIP,KAGvB,CAACC,EAAY3C,EAAqB0C,IAErC,IAAMQ,EAAkB,SAACna,EAAD,GAAkB,IAAZsL,EAAW,EAAXA,KAC5BuO,EAAcvO,IAGhB,OACE,kBAAC+N,GAAD,CAAiB3Q,IAAKoR,GACpB,kBAACM,GAAA,EAAD,CACEC,QAASP,EACTQ,OAAQX,EACRY,aAAc,CAAEb,OAAQ,MAExB,kBAACJ,GAAD,CAAiBkB,WAAS,EAACC,UAAQ,GACjC,kBAAClB,GAAA,EAAKhW,KAAN,CAAWmX,OAAuB,YAAfd,EAA0BtO,KAAK,UAAUyJ,QAASoF,IACrE,kBAACZ,GAAA,EAAKhW,KAAN,CAAWmX,OAAuB,eAAfd,EAA6BtO,KAAK,aAAayJ,QAASoF,IAC3E,kBAACZ,GAAA,EAAKhW,KAAN,CAAWmX,OAAuB,UAAfd,EAAwBtO,KAAK,QAAQyJ,QAASoF,MAGpE,CACCQ,QAAS,kBAAC,GAAD,CAAclO,QAASA,EAASU,UAAWA,IACpDtC,WAAY,kBAAC,GAAD,CACVgJ,WAAY,GACZhJ,WAAYA,EACZiJ,WAAYA,EACZR,UAAU,IAEZxH,MAAOA,EAAMnF,OAAS,kBAAC,GAAD,CAAaiS,WAAY9M,IAAY,gEAC3D8N,M,qBCnEFgB,GAAchZ,IAAOoP,IAAI,CAC7B/M,QAAS,OACTkP,SAAU,OACV0H,eAAgB,kBAGZzY,GAASR,IAAOoP,IAAI,CACxBjN,MAAO,OACPkN,OAAQ,UAGJ6J,GAAYlZ,IAAOmZ,GAAG,CAC1B9J,OAAQ,UACR9O,MAAO,OACPwV,WAAY,QAGRqD,GAAgBpZ,IAAOoP,IAAI,CAC/BiK,SAAU,WACVC,KAAM,IACNC,MAAO,IACPC,WAAY,SACZ/F,OAAQ,OACRnT,gBAAiB,WAGbmZ,GAAiBzZ,IAAOoP,IAAI,SAAAzP,GAAK,MAAK,CAC1C0Z,SAAU,WACVhX,QAAS,OACT,oDAAqD,CACnDA,QAAS1C,EAAM+Z,QAAU,QAAU,OACnCvX,MAAO,UAILwX,GAAW3Z,IAAOoP,IAAI,CAC1BiK,SAAU,WACVjB,IAAK,IACLkB,KAAM,IACNhZ,gBAAiB,QACjBmT,OAAQ,OACRtR,MAAO,SAGHyX,GAAkB5Z,IAAOoP,IAAI,SAAAzP,GAAK,MAAK,CAC3CwC,MAAO,OACPkX,SAAW1Z,EAAMka,MAAmB,WAAX,SACzBzB,IAAK,IACLN,OAAQ,IACR,oDAAqD,CACnDuB,SAAU1Z,EAAM+Z,UAAY/Z,EAAMka,MAAQ,QAAU,WACpD1X,MAAOxC,EAAM+Z,UAAY/Z,EAAMka,MAAQ,OAAS,MAChDN,MAAO,QAILO,GAAgB9Z,IAAOoP,IAAI,CAC/BiK,SAAU,WACVxB,WAAY,WAGRkC,GAAoB/Z,YAAOga,KAAPha,CAAoB,CAC5CqZ,SAAU,WACVjB,IAAK,IACLkB,KAAM,MA2IOW,GAxID,SAAC,GAST,EARJtb,GAQK,IAPLqQ,EAOI,EAPJA,MACA/D,EAMI,EANJA,KACAJ,EAKI,EALJA,QACAU,EAII,EAJJA,UACAR,EAGI,EAHJA,SACA9B,EAEI,EAFJA,WACAiB,EACI,EADJA,MAEMgQ,EAAmB3X,IAAM6P,OAAO,MAChC+H,EAAiB5X,IAAM6P,OAAO,MAFhC,EAGsB7P,IAAMC,UAAS,GAHrC,mBAGGqX,EAHH,KAGUO,EAHV,OAI0B7X,IAAMC,UAAS,GAJzC,mBAIGkX,EAJH,KAIYW,EAJZ,OAKkD9X,IAAMC,SAASpD,OAAOkb,WAAW,8CAA8CnO,SALjI,mBAKGkJ,EALH,KAKwBkF,EALxB,OAM8BhY,IAAMC,SAAS,GAN7C,mBAMGuV,EANH,KAMcyC,EANd,KAQJjY,IAAM0M,UAAU,WACd,IAgBMwL,EAAW,IAAIC,qBAVG,SAACC,EAASF,GAC5BpF,IAAwBwE,IACtBc,EAAQ,GAAGC,mBAAqB,IAAOD,EAAQ,GAAGE,eACpDR,GAAW,GAEXA,GAAW,KAXD,CACdS,KAAM,KACNC,WAAY,MACZC,UAAW,KAgBb,OAFAP,EAASQ,QAAQf,EAAiBtN,SAE3B,WACL6N,EAASS,eAEV,CAACrB,EAAOxE,IAEX9S,IAAM0M,UAAU,WACd,IAAMkM,EAAQhB,EAAevN,QAAQwO,oBAE/BC,EAAa,WACjBhB,GAAW,GACXD,GAAS,IAGLkB,EAAa,WACjBlB,GAAS,IAKX,OAFAe,EAAMxI,iBAAiB,wBAAyB0I,GAChDF,EAAMxI,iBAAiB,wBAAyB2I,GACzC,WACLH,EAAMvI,oBAAoB,wBAAyByI,GACnDF,EAAMvI,oBAAoB,wBAAyB0I,KAEpD,IAEH/Y,IAAM0M,UAAU,WACd,IAAM4D,EAAW,WACf,IAAM0I,EAAmBnc,OAAOkb,WAAW,8CACvCiB,EAAiBpP,QAGnBqO,EAAa,GAFbA,EAAaL,EAAevN,QAAQwO,oBAAoBI,cAI1DjB,EAAuBgB,EAAiBpP,UAI1C,OADA/M,OAAOuT,iBAAiB,SAAUE,GAC3B,WACLzT,OAAOwT,oBAAoB,SAAUC,KAEtC,IAEH,IAAMX,EAAa,SAAAb,GACjB8I,EAAevN,QAAQ6O,OAAOC,WAAWrK,IACzC,IAAM8J,EAAQhB,EAAevN,QAAQwO,oBAEjCD,EAAMQ,QAAUxB,EAAevN,QAAQgP,iBAAmB,GAC5DT,EAAMU,QAUV,OACE,kBAAC7C,GAAD,KACE,kBAAC,GAAD,KACE,4BAAKhK,GACL,kBAACkK,GAAD,sBAA0BhL,GAAYjD,KAExC,kBAACmO,GAAD,CAAetS,IAAKoT,IACpB,kBAACT,GAAD,CAAgBC,QAASA,GACvB,kBAACI,GAAD,KACE,kBAACH,GAAD,QAGJ,kBAACC,GAAD,CAAiBC,MAAOA,EAAOH,QAASA,GACtC,kBAACI,GAAD,KACE,kBAACC,GAAD,CACEjT,IAAKqT,EACLvW,IAAKmH,EACL+Q,QAvBW,WACfzG,GACFmF,EAAaL,EAAevN,QAAQwO,oBAAoBI,eAsBlDO,UAAQ,EACRtI,OAAO,OACPtR,MAAM,WAIZ,kBAAC,GAAD,CACE8G,WAAYA,EACZiJ,WAAYA,EACZmD,oBAAqBA,IAEvB,kBAAC,GAAD,CACExK,QAASA,EACTU,UAAWA,EACXtC,WAAYA,EACZiB,MAAOA,EACPgI,WAAYA,EACZ6F,UAAWA,EACX1C,oBAAqBA,MCvKd2G,GA9BQ,SAAC,GAAY,IAAVrd,EAAS,EAATA,GAAS,EACP4D,IAAMC,WADC,mBAC1BW,EAD0B,KACnB8Y,EADmB,KAejC,OAbAlN,GAAiB5L,EAAK,UAAMA,EAAMuG,KAAZ,cAAsBwE,GAAY/K,EAAM8H,OAAU,cAExE1I,IAAM0M,UAAU,WACd,IACE,qBAAC,4BAAArM,EAAA,qEACyB+H,GAAahM,GADtC,OACOud,EADP,OAECD,EAASC,GAFV,wCAAD,GAIA,MAAO9d,MAGR,CAACO,IAEGwE,EACL,kBAAC,GAAD,CACExE,GAAIA,EACJqQ,MAAO7L,EAAMuG,KACbuB,KAAM9H,EAAM8H,KACZH,YAAa3H,EAAM2H,YACnBS,UAAWpI,EAAMoI,UACjBR,SAAU5H,EAAM4H,SAChBF,QAAS1H,EAAM0H,QACf5B,WAAY9F,EAAM8F,WAClBiB,MAAO/G,EAAM+G,QAEb,kBAACiS,GAAA,EAAD,CAAQrD,QAAM,KC7BdlX,GAAS5B,YAAOY,IAAPZ,CAAkB,CAC/B6B,UAAW,UAGPC,GAAmB9B,YAAOY,IAAPZ,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAaDoa,GAVG,SAAC,GAAe,IAAb5P,EAAY,EAAZA,MACnB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO7N,GAAI6N,EAAM6P,OAAO1d,QCV1B2d,GAAiBtc,IAAOoP,IAAI,CAChCC,OAAQ,yBAGJkN,GAAcvc,IAAOuP,KAAK,CAC9BlN,QAAS,QACT9B,MAAO,OACPiP,YAAa,OACbqI,WAAY,QAGR2E,GAAcxc,IAAOuP,KAAK,CAC9BhP,MAAO,OACPwV,WAAY,MACZlE,SAAU,SAGN4K,GAAUzc,IAAOoP,IAAI,CACzBI,YAAa,SAGTE,GAAa1P,YAAO2P,IAAP3P,CAAe,IA6DnB4P,GA3DiB,SAAC,GAAc,EAAZC,MAAa,IAAD,EACXtN,IAAMC,SAAS,IADJ,mBACtCwN,EADsC,KAC3BC,EAD2B,OAEX1N,IAAMC,UAAS,GAFJ,mBAEtCka,EAFsC,KAE3BC,EAF2B,OAGHpa,IAAMC,SAAS,IAHZ,mBAGtC0N,EAHsC,KAGvBC,EAHuB,KAI7CpB,GAAiB,oBAYjBxM,IAAM0M,UAAU,WACd,qBAAC,8BAAArM,EAAA,4DACC+Z,GAAa,GADd,SAEyBnV,KAFzB,cAEOwI,EAFP,gBAG8B5J,QAAQ0D,IACnCkG,EAAUnG,IAAI,mBAAY4B,GAAZ,EAAG9M,OAJpB,OAGOie,EAHP,OAMC3M,EAAa2M,GACbzM,EAAiByM,GACjBD,GAAa,GARd,yCAAD,IAUC,IAWH,OACE,kBAAC,IAAMlc,SAAP,KACE,kBAAC6b,GAAD,KACE,kBAAC,GAAD,CACEtZ,YAAY,uBACZlE,QAdc,CACpB,CAAEsE,IAAK,KAAMP,MAAO,MAAOyN,KAAM,OACjC,CAAElN,IAAK,OAAQP,MAAO,OAAQyN,KAAM,aACpC,CAAElN,IAAK,IAAKP,MAAO,IAAKyN,KAAM,cAC9B,CAAElN,IAAK,IAAKP,MAAO,IAAKyN,KAAM,iBAC9B,CAAElN,IAAK,IAAKP,MAAO,IAAKyN,KAAM,iBAC9B,CAAElN,IAAK,KAAMP,MAAO,KAAMyN,KAAM,cAS1BrN,SAtCiB,SAAC7E,EAAD,GAAmB,IAAbyE,EAAY,EAAZA,MAC7B,GAAc,QAAVA,EACFsN,EAAiBH,OACZ,CACL,IAAMO,EAAiBrF,IAAOC,MAAMqF,SAAS3N,EAAO,UAEpDsN,EAAiBH,EAAUpL,OAAO,mBADlB,SAAAqG,GAAI,OAAIC,IAAOC,IAAIF,GAAMwF,QAAQF,GACDE,CAAd,EAAGxF,aAkCnC,kBAACsR,GAAD,KAAcrM,EAAcnL,OAA5B,aAEF,kBAAC0X,GAAD,KACGC,EACC,kBAACF,GAAD,mBAEA,kBAAC,GAAD,CAAgBzP,OAAQmD,OC9E5BtO,GAAS5B,YAAOY,IAAPZ,CAAkB,CAC/B6B,UAAW,UAGPC,GAAmB9B,YAAOY,IAAPZ,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAcD6a,GAXO,WACpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,0CACA,kBAACC,GAAD,SCfFC,GAAoB/c,YAAO,MAAPA,CAAc,CACpCqC,QAAS,OACTkP,SAAU,SAGRlD,GAAOrO,YAAO,MAAPA,CAAc,CACvBmC,MAAO,QACP+S,OAAQ,oBACR5G,UAAW,sBACXjO,QAAS,SACT2B,aAAc,SACd5B,aAAc,MACd4c,YAAa,OACbC,OAAQ,UACR9c,WAAY,UACZ,SAAU,CACN+c,UAAW,iBAIbC,GAAcnd,YAAO,KAAPA,CAAa,CAC7B+V,WAAY,IACZlE,SAAU,WAwBCuL,eApBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQha,EAAc,EAAdA,QAC/B,OACI,kBAAC,WAAD,KACI,8CACA,kBAAC0Z,GAAD,KACKM,EAAOxT,IAAI,gBAAGW,EAAH,EAAGA,UAAW8S,EAAd,EAAcA,MAAO3e,EAArB,EAAqBA,GAArB,OACR,kBAAC,GAAD,CACIyE,IAAKoH,EACL2I,QAAS,kBAAM9P,EAAQC,KAAR,kBAAwB3E,MACvC,kBAACwe,GAAD,KAAc3S,GACd,kDACA,uBAAG+L,KAAI,iBAAY+G,IAAUA,UCftCC,GApBkB,WAAO,IAAD,EACJ/a,mBAAS,MADL,mBAC5B6a,EAD4B,KACpBG,EADoB,KAYnC,OAVAzO,GAAiB,wBAEjBE,oBAAU,WAAM,2CACZ,4BAAArM,EAAA,qEACuBoK,KADvB,OACU7G,EADV,OAEIqX,EAAarX,GAFjB,0CADY,uBAAC,WAAD,wBAKZsX,IACF,IAEEJ,EAIA,kBAAC,GAAD,CAAiBA,OAAQA,IAHlB,kBAAClB,GAAA,EAAD,CAAQrD,QAAM,KCbvBlX,GAAS5B,YAAOY,IAAPZ,CAAkB,CAC7B6B,UAAW,UAITC,GAAmB9B,YAAOY,IAAPZ,CAAkB,CACvC+B,UAAW,iBACXC,aAAc,mBAaH0b,GAVA,WACX,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,SCfVC,GAAgB3d,YAAO,MAAPA,CAAc,CAChCqC,QAAS,OACT4W,eAAgB,SAChBrE,cAAe,SACfpD,WAAY,WAsBDmF,GAnBA,SAAC,GAAgE,IAAD,IAA9DiH,cAAgBpT,EAA8C,EAA9CA,UAAW8S,EAAmC,EAAnCA,MAAOO,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAAS5T,EAAY,EAAZA,MAC/D,OACA,kBAACyT,GAAD,KACI,kBAACtP,GAAA,EAAD,CAAMvN,MAAO,CAACT,QAAS,OAAQ8B,MAAO,SAClC,kBAACkM,GAAA,EAAK7N,OAAN,KAAcgK,GACd,uBAAG+L,KAAI,iBAAY+G,IAAUA,GAC7B,6BAAMO,GACN,wCAEI,uBAAIxH,OAAQ,SACRC,IAAI,sBACJC,KAAMuH,GAAUA,KAG5B,kBAAC,GAAD,CAAa9G,WAAY9M,EAAO+M,UAAU,MCDnCmG,eAlBS,SAAC,GAAkC,IAAbze,EAAY,EAA/B6N,MAAS6P,OAAU1d,GAAY,EACT6D,mBAAS,MADA,mBAC/Cob,EAD+C,KAChCG,EADgC,KAUtD,OARAhP,GAAiB6O,EAAgBA,EAAcpT,UAAY,cAC3DyE,oBAAU,WAAM,2CACZ,4BAAArM,EAAA,qEACwBqK,GAAkBtO,GAD1C,OACUuL,EADV,OAEI6T,EAAoB7T,GAFxB,0CADY,uBAAC,WAAD,wBAKZuT,IACD,CAAC9e,IACAif,EAIA,kBAAC,GAAD,CAAQA,cAAeA,IAHhB,kBAACzB,GAAA,EAAD,CAAQrD,QAAM,MCZvBlX,GAAS5B,YAAOY,IAAPZ,CAAkB,CAC7B6B,UAAW,UAITC,GAAmB9B,YAAOY,IAAPZ,CAAkB,CACvC+B,UAAW,iBACXC,aAAc,mBAaH2U,GAVA,WACX,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,SCNhB1X,IAAQ+e,WAAW,kBAEnB,IAeeC,GAfH,kBACV,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzf,EAAY0f,KAC7C,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWzf,EAAY8R,MAC7C,kBAAC,IAAD,CAAOyN,OAAK,EAACC,KAAK,UAAUC,UAAWzf,EAAYke,MACnD,kBAAC,IAAD,CAAOsB,KAAK,cAAcC,UAAWzf,EAAYqb,MACjD,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,UAAUC,UAAWzf,EAAY8e,MACnD,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,cAAcC,UAAWzf,EAAY+X,OAEzD,kBAAC,EAAD,QCfgB4H,QACW,cAA7Bnf,OAAOC,SAASmf,UAEe,UAA7Bpf,OAAOC,SAASmf,UAEhBpf,OAAOC,SAASmf,SAAShS,MACvB,2DCZNiS,IAASC,OAAO,kBAAC,GAAD,MAASxP,SAASyP,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhb,KAAK,SAAAib,GACjCA,EAAaC,iB","file":"static/js/main.d1b2b2c2.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 281;","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\n\nexport default function withTracker(WrappedComponent, options = {}) {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = class extends Component {\n    componentDidMount() {\n      trackPage(window.location.hash.substr(1));\n    }\n\n    componentDidUpdate(nextProps) {\n      const currentPage = this.props.location.pathname;\n      const nextPage = nextProps.location.pathname;\n\n      if (currentPage !== nextPage) {\n        trackPage(nextPage);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n}\n","import React from \"react\";\nimport { Segment, Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Brand = styled.h1({});\n\nconst HeadingTab = styled(\"span\")({\n  transition: \".8s all\",\n  borderRadius: \"5px\",\n  padding: \"1rem .5rem\",\n  \":hover\": {\n    backgroundColor: \"#F5F5F5\",\n    color: \"black\"\n\n  }\n});\n\nconst Header = () => (\n  <React.Fragment>\n    <Segment vertical>\n      <Container>\n        <Link to=\"/\">\n          <Brand>Council Data Project</Brand>\n        </Link>\n      </Container>\n    </Segment>\n    <Segment vertical>\n      <Container>\n        <Link to=\"/events\">\n          <HeadingTab>Events</HeadingTab>\n        </Link>\n        <Link to=\"/people\">\n          <HeadingTab style={{ marginLeft: \"10px\" }}>People</HeadingTab>\n        </Link>\n      </Container>\n    </Segment>\n  </React.Fragment>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Segment, Grid, Header, List } from \"semantic-ui-react\";\n\nconst Footer = () => (\n  <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\n    <Container>\n      <Grid inverted stackable>\n        <Grid.Row columns=\"equal\">\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"About\" />\n            <List link inverted>\n              <List.Item as=\"a\">The Project</List.Item>\n              <List.Item as=\"a\">The Team</List.Item>\n              <List.Item as=\"a\">Other Work</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"Seattle\" />\n            <List link inverted>\n              <List.Item as=\"a\">City of Seattle</List.Item>\n              <List.Item as=\"a\">Seattle Open Data</List.Item>\n              <List.Item as=\"a\">Seattle Channel</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"Developers\" />\n            <List link inverted>\n              <List.Item as=\"a\">Council Data Project</List.Item>\n              <List.Item as=\"a\">Seattle Specific</List.Item>\n              <List.Item as=\"a\">Transcription Runner</List.Item>\n            </List>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <p>\n            This web application is not funded by, nor associated with the\n            Seattle City Council. This is a prototype web application to show\n            the viability of an automated and collaborativly sourced city\n            council transcription service. The transcripts are roughly\n            ninty-percent accurate, and therefore may not represent what was\n            actually said.\n          </p>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Input, Button, Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst SearchBar = styled(Input)({\n  width: \"50% !important\"\n});\n\nconst StyledGrid = styled(Grid)({\n  display: \"block\",\n  marginTop: \"150px !important\"\n});\n\nconst HomePage = props => {\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      props.history.push(`/search?q=${searchQuery}`);\n    }\n  };\n  const handleSearch = async (e, { value }) => {\n    setSearchQuery(value);\n  };\n\n  return (\n    <Layout>\n      <ContentContainer>\n        <StyledGrid verticalAlign=\"middle\" centered>\n          <Grid.Row>\n            <h1>Search City Council Transcripts</h1>\n          </Grid.Row>\n          <Grid.Row>\n            <SearchBar\n              placeholder=\"Enter a keyword to search meeting transcripts\"\n              value={searchQuery}\n              onChange={handleSearch}\n              onKeyPress={handleKeyPress}\n            />\n            <Button\n              attached=\"right\"\n              primary\n              as={Link}\n              to={`/search?q=${searchQuery}`}\n            >\n              Search\n            </Button>\n          </Grid.Row>\n        </StyledGrid>\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","export async function fetchJson(url){\n    return fetch(url)\n        .then(res => res.json())\n};\n\nexport function isString(s) {\n    return typeof(s) === \"string\" || s instanceof String;\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { isString } from \"./utils\";\n\nexport const WHERE_OPERATORS = {\n    eq: \"==\",\n    contains: \"array-contains\",\n    gt: \">\",\n    lt: \"<\",\n    gteq: \">=\",\n    lteq: \"<=\",\n};\n\nexport const ORDER_OPERATORS = {\n    asc: \"asc\",\n    desc: \"desc\"\n};\n\nexport class WhereCondition {\n    /**\n    * @param {(Object|Array)} filter The object or array to use to create a WhereCondition from.\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`, `value`].\n    *   When provided an Object, the object must have `columnName` and `value` attributes, and, optional `operator`\n    *   attributes. The `operator` is optional in both cases and if left out, will default to value equality.\n    */\n    constructor(filter) {\n        const generalErr = new Error(`Unsure how to create WhereCondition from received data: ${filter}`);\n\n        // Handle array and object\n        if (filter instanceof Array) {\n            // Array two items long, assume equal operator\n            if (filter.length === 2) {\n                this.columnName = filter[0];\n                this.operator = WHERE_OPERATORS.eq;\n                this.value = filter[1];\n            // Array of three items long, check order\n            } else if (filter.length === 3) {\n                // Check proper order by ensuring an approved operator is included at index one\n                if (Object.values(WHERE_OPERATORS).includes(filter[1])) {\n                    // Unpack contents\n                    this.columnName = filter[0];\n                    this.operator = filter[1];\n                    this.value = filter[2];\n                } else {\n                    throw new Error(`\n                        Unknown WhereCondition operator: ${filter[1]}\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\n                    `);\n                };\n            // Log error in any other case\n            } else {\n                throw generalErr;\n            };\n        } else if (filter instanceof Object) {\n            // All attributes present and operator is valid\n            if (\n                filter.columnName &&\n                filter.operator &&\n                filter.value\n            ) {\n                if (Object.values(WHERE_OPERATORS).includes(filter.operator)) {\n                    this.columnName = filter.columnName;\n                    this.operator = filter.operator;\n                    this.value = filter.value;\n                } else {\n                    throw new Error(`\n                        Unknown WhereCondition operator: ${filter.operator}\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\n                    `);\n                };\n            // Only column name and value attributes present, assume equal operator\n            } else if (filter.columnName && filter.value) {\n                this.columnName = filter.columnName;\n                this.operator = WHERE_OPERATORS.eq;\n                this.value = filter.value;\n            } else {\n                throw generalErr;\n            };\n        } else {\n            throw generalErr;\n        };\n    };\n};\n\nexport class OrderCondition {\n    /**\n    * @param {(Object|Array|string)} order The object, array, or string to use to create an OrderCondition from.\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`].\n    *   When provided an Object, the object must have `columnName`, and, optional `operator` attributes.\n    *   The `operator` is optional in both cases and if left out, will default to `descending`.\n    *   When provided a String, the string is simply the `columnName` for the OrderCondition, as the `operator` will\n    *   default to `descending`.\n    */\n    constructor(by) {\n        const generalErr = new Error(`Unsure how to create OrderCondition from received data: ${by}`);\n\n        // Handle string, array, and object\n        if (isString(by)) {\n            this.columnName = by;\n            this.operator = ORDER_OPERATORS.desc;\n        } else if (by instanceof Array) {\n            // Array single item long, assume descending operator\n            if (by.length === 1) {\n                this.columnName = by[0];\n                this.operator = ORDER_OPERATORS.desc;\n            // Array of two items long, check order\n            } else if (by.length === 2) {\n                // Check proper order by ensuring an approved operator is included at index one\n                if (Object.values(ORDER_OPERATORS).includes(by[1])) {\n                    // Unpack contents\n                    this.columnName = by[0];\n                    this.operator = by[1];\n                } else {\n                    throw new Error(`\n                        Unknown OrderCondition operator: ${by[1]}\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\n                    `);\n                };\n            // Log error in any other case\n            } else {\n                throw generalErr;\n            };\n        } else if (by instanceof Object) {\n            // All attributes present and operator is valid\n            if (\n                by.columnName &&\n                by.operator\n            ) {\n                if (Object.values(ORDER_OPERATORS).includes(by.operator)) {\n                    this.columnName = by.columnName;\n                    this.operator = by.operator;\n                } else {\n                    throw new Error(`\n                        Unknown OrderCondition operator: ${by.operator}\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\n                    `);\n                };\n            // Only column name, assume descending operator\n            } else if (by.columnName) {\n                this.columnName = by.columnName;\n                this.operator = ORDER_OPERATORS.desc;\n            } else {\n                throw generalErr;\n            };\n        } else {\n            throw generalErr;\n        };\n    };\n};\n\nclass Database {\n    /**\n    * @param {Object} credentials An object that contains all reqired information to interact with a CDP database.\n    */\n    constructor(credentials) {\n        // Store for save keeping\n        this.credentials = credentials;\n\n        // Initialize Connection\n        firebase.initializeApp(this.credentials);\n\n        // Store connection\n        this.connection = firebase.firestore();\n    };\n\n    /**\n    * @param {string} table The name of the table (collection) you want to request results from.\n    * @param {string} id The id for the row you want to retrieve.\n    * @return {Object} If the row was found, the row's contents are returned as an object.\n    */\n    async selectRowById(table, id) {\n        try {\n            const res = await this.connection\n                .collection(table)\n                .doc(id)\n                .get()\n                \n            return res.data();\n        } catch (e) {\n            return Promise.reject(e);\n        };\n    };\n\n    /**\n    * @param {Object[]} queryResults The results returned from a query to the database.\n    * @return {Object[]} The formatted query results.\n    */\n    async _unpackQueryResults(queryResults) {\n        const results = [];\n        queryResults.forEach(doc => {\n            const data = doc.data();\n            const thisEvent = {\n              id: doc.id,\n              ...data\n            };\n            results.push(thisEvent);\n        });\n        return results;\n    };\n\n    /**\n    * @param {string} table The name of the table (collection) you want to request results from.\n    * @param {(Object[]|Array[])} [filters] A list of filters (where conditions) to add.\n    * @param {(Object|string)} [orderBy] An order by condition to order the results by prior to returning.\n    * @param {integer} [limit=1000] An integer limit to how many rows should be returned that match the query provided.\n    * @return {Object[]} The formatted query results.\n    */\n    async selectRowsAsArray(table, filters = [], orderBy = undefined, limit = 1000) {\n        try {\n            // Make basic reference\n            let ref = this.connection.collection(table);\n\n            // Attach filters\n            filters.forEach(filter => {\n                ref = ref.where(filter.columnName, filter.operator, filter.value);\n            });\n\n            // Attach order by\n            if (orderBy) {\n                ref = ref.orderBy(orderBy.columnName, orderBy.operator);\n            };\n\n            // Attach limit\n            ref = ref.limit(limit);\n\n            // Make requst\n            const res = await ref.get()\n                .catch(err => {\n                    throw new Error(`Failed to retrieve data from database. Error: ${err}`);\n                });\n\n            // Return the formatted results\n            return await this._unpackQueryResults(res);\n        } catch (e) {\n            return Promise.reject(e);\n        };\n    };\n};\n\n// Export created and connected database\nexport const db = new Database({\n    apiKey: \"AIzaSyA7aO6weBcOUBZLmxE3aMyn4NeElVEHZUc\",\n    authDomain: \"cdp-sea.firebaseapp.com\",\n    projectId: \"cdp-seattle\",\n    databaseURL: \"https://cdp-sea.firebaseio.com\"\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport moment from \"moment\";\nimport natural from \"natural\";\nimport { flatten, sortBy, reverse, groupBy, mapValues, filter } from \"lodash\";\nimport { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from \"./database\";\nimport { fetchJson } from \"./utils\";\n\nconst storage = firebase.storage();\n\nexport async function getAllEvents() {\n  return await db.selectRowsAsArray(\"event\", [], new OrderCondition([\"event_datetime\", ORDER_OPERATORS.desc]));\n}\n\nexport async function getEventMinutes(eventId, indexOrder) {\n  try {\n    const eventMinutes = await db.selectRowsAsArray(\n      \"event_minutes_item\",\n      [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])],\n      new OrderCondition([\"index\", indexOrder])\n    );\n    return eventMinutes;\n  } catch (e) {\n    return Promise.reject(e);\n  };\n}\n\nexport async function getEventMinutesItem(eventMinutesItem) {\n  try {\n    const minutesItem = await db.selectRowById(\"minutes_item\", eventMinutesItem.minutes_item_id);\n    const minutesItemFiles = await db.selectRowsAsArray(\n      \"minutes_item_file\",\n      [new WhereCondition([\"minutes_item_id\", WHERE_OPERATORS.eq, eventMinutesItem.minutes_item_id])],\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\n    );\n\n    return {\n      ...eventMinutesItem,\n      minutes_item: {\n        id: eventMinutesItem.minutes_item_id,\n        ...minutesItem,\n        file: minutesItemFiles\n      }\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  };\n}\n\nexport async function getEventBody(bodyId) {\n  try {\n    const body = await db.selectRowById('body', bodyId);\n    return body;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventTranscriptMetadata(eventId) {\n  try {\n    const [firstTranscript] = await db.selectRowsAsArray(\n      \"transcript\",\n      [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])]\n    );\n\n    const transcriptMetadata = await db.selectRowById(\"file\", firstTranscript.file_id);\n\n    // https://firebase.google.com/docs/storage/web/download-files\n    const gsReference = storage.refFromURL(transcriptMetadata.uri);\n    const transcript = await gsReference\n      .getDownloadURL()\n      .then(url => fetchJson(url));\n    return transcript;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getVotesForEvent(minutesItems) {\n  const minuteItemsWithDecisions = minutesItems.filter(\n    minute => minute.decision !== null\n  );\n\n  const formattedItems = [];\n  minuteItemsWithDecisions.forEach(item => {\n    formattedItems.push({\n      matter: item.minutes_item.matter,\n      name: item.minutes_item.name,\n      id: item.id,\n      decision: item.decision,\n      index: item.index\n    });\n  });\n\n  const votePromises = formattedItems.map(item =>\n    db.selectRowsAsArray(\n      \"vote\",\n      [new WhereCondition([\"event_minutes_item_id\", WHERE_OPERATORS.eq, item.id])]\n    )\n  );\n\n  const minuteItemVotes = await Promise.all(votePromises);\n\n  const allPeople = await db.selectRowsAsArray(\"person\");\n\n  formattedItems.forEach((item, i) => {\n    const votes = minuteItemVotes[i];\n    const votesByPerson = [];\n    votes.forEach(vote => {\n      const person = allPeople.find(person => person.id === vote.person_id)\n      votesByPerson.push({\n        decision: vote.decision,\n        person_id: vote.person_id,\n        full_name: person.full_name\n      });\n    });\n\n    item.formattedIndividualVotes = sortBy(votesByPerson, vote => vote.full_name);\n  });\n\n  return formattedItems;\n}\n\nexport async function getEventById(id) {\n  try {\n    const event = await db.selectRowById(\"event\", id);\n    const body = await getEventBody(event.body_id);\n    const minutes = await getEventMinutes(id, ORDER_OPERATORS.asc);\n    const minutesItems = await Promise.all(\n      minutes.map(minute => getEventMinutesItem(minute))\n    );\n    const transcript = await getEventTranscriptMetadata(id);\n    const votes = await getVotesForEvent(minutesItems);\n\n    return {\n      id,\n      name: body.name,\n      description: body.description,\n      videoUrl: event.video_uri,\n      date: moment\n        .utc(event.event_datetime.toMillis())\n        .toISOString(),\n      minutes: minutesItems,\n      transcript: transcript.data,\n      scPageUrl: event.source_uri,\n      votes: votes\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getBasicEventById(id) {\n  try {\n    const event = await db.selectRowById(\"event\", id);\n    const body = await getEventBody(event.body_id);\n\n    return {\n      id,\n      name: body.name,\n      description: body.description,\n      date: moment\n        .utc(event.event_datetime.toMillis())\n        .toISOString()\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventsByIndexedTerm(term) {\n  const valueMin = 0;\n  try {\n    natural.PorterStemmer.attach();\n\n    const stemmedTokens = term.tokenizeAndStem();\n\n    // get matches for each term\n    const matches = await Promise.all(\n      stemmedTokens.map(stemmedToken =>\n        db.selectRowsAsArray(\n          \"indexed_event_term\",\n          [new WhereCondition([\"term\", WHERE_OPERATORS.eq, stemmedToken])]\n        )\n      )\n    );\n\n    // create a map of event id to object with id and sum of match values\n    const summedMatchValueByEventId = mapValues(\n      groupBy(flatten(matches), match => match.event_id),\n      (eventTermMatches, key) =>\n        eventTermMatches.reduce(\n          (current, item) => ({\n            ...current,\n            value: current.value + item.value\n          }),\n          { event_id: key, value: 0 }\n        )\n    );\n\n    // reverse to get highest value first\n    const sortedSummedMatches = reverse(\n      sortBy(\n        filter(summedMatchValueByEventId, ({ value }) => value >= valueMin),\n        ({ value }) => value\n      )\n    );\n\n    // fetch events in order of value and return\n    const events = await Promise.all(\n      sortedSummedMatches.map(({ event_id }) => getBasicEventById(event_id))\n    );\n\n    return events;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n","import { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from './database';\nimport { orderBy } from 'lodash';\nimport moment from 'moment';\n\nexport async function getAllPeople() {\n  const allPeople = await db.selectRowsAsArray(\n    'person',\n    [],\n    new OrderCondition(['full_name', ORDER_OPERATORS.asc])\n  );\n  return allPeople;\n}\n\n/**\n * @param {object} personData takes data from person query, all it needs is {id: id}\n * @returns {object} that has the person information and an array of votes with the following data:\n * { id, matter, name, voteForPerson, decision, eventId, index, eventDate, body_name }\n */\n\nexport async function getVotesForPerson(personId) {\n  const formattedVotes = [];\n  const person = await db.selectRowById('person', personId);\n  const votes = await db.selectRowsAsArray(\n    'vote',\n    [new WhereCondition(['person_id', WHERE_OPERATORS.eq, personId])],\n  );\n  const eventMinutesItemsPromises = votes.map(vote => db.selectRowById('event_minutes_item', vote.event_minutes_item_id));\n  const eventMinutesItems = await Promise.all(eventMinutesItemsPromises);\n  const minutesItemsPromises = eventMinutesItems.map(item => db.selectRowById('minutes_item', item.minutes_item_id));\n  const minutesItems = await Promise.all(minutesItemsPromises);\n  // commented this out for now, but we could link to the file if we get this data\n  // const allMinuteFiles = await getAllResources('minutes_item_file')\n  const eventsPromises = eventMinutesItems.map(item => db.selectRowById('event', item.event_id));\n  const events = await Promise.all(eventsPromises);\n  const allBodies = await db.selectRowsAsArray('body');\n  \n  votes.forEach((voteData, i) => {\n    const eventMinuteItem = eventMinutesItems[i];\n    const minuteItem = minutesItems[i];\n    const event = events[i];\n    const body = allBodies.find(item => item.id === event.body_id);\n    // const file = allMinuteFiles.find(item => item.minutes_item_id === minuteItem.id)\n    const formattedVote = {\n      id: voteData.id,\n      matter: minuteItem.matter,\n      name: minuteItem.name,\n      // what this person voted\n      voteForPerson: voteData.decision,\n      // what the coucile decided\n      decision: eventMinuteItem.decision,\n      eventId: eventMinuteItem.event_id,\n      index: eventMinuteItem.index,\n      eventDate: moment.utc(event.event_datetime.toMillis()).toISOString(),\n      body_name: body.name\n      // file\n    }\n    formattedVotes.push(formattedVote)\n  });\n  const sortedVotes = orderBy(formattedVotes, ['eventDate', 'index'], ['desc', 'desc']);\n  return { ...person, votes: sortedVotes };\n}","import moment from 'moment';\n\n/*Always display PST/PDT for event_datetime, regardless of user's locale*/\nconst getDateTime = (date) => {\n  return moment.utc(date).format('MMMM D, YYYY h:mm A');\n};\n\nexport default getDateTime;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst StyledCard = styled(Card)({\n  boxShadow: \"none !important\"\n});\n\nconst StyledCardContent = styled(Card.Content)({\n  padding: \"0 !important\"\n});\n\nconst EventCard = ({ name, date, description, link }) => (\n  <StyledCard fluid>\n    <StyledCardContent>\n      <Card.Header>\n        <Link to={link}>{name}</Link>\n      </Card.Header>\n      <Card.Meta>{getDateTime(date)}</Card.Meta>\n      <Card.Description>{description}</Card.Description>\n    </StyledCardContent>\n  </StyledCard>\n);\n\nexport default EventCard;\n","import React from \"react\";\nimport EventCard from \"./EventCard\";\nimport { Card } from \"semantic-ui-react\";\n\nconst EventCardGroup = ({ events }) => {\n  return (\n    <Card.Group centered>\n      {events.map(({ name, date, description, id }) => (\n        <EventCard\n          key={id}\n          name={name}\n          date={date}\n          description={description}\n          link={`/events/${id}`}\n        />\n      ))}\n    </Card.Group>\n  );\n};\n\nexport default EventCardGroup;\n","import React from 'react';\n\nfunction useDocumentTitle(title) {\n  React.useEffect(() => {\n    document.title = title;\n\n    return () => {\n      document.title = 'Council Data Project - Seattle';\n    };\n  }, [title]);\n\n}\n\nexport default useDocumentTitle;","import React from \"react\";\nimport { Input, Select } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport styled from \"@emotion/styled\";\nimport { getEventsByIndexedTerm } from \"../api\";\nimport EventCardGroup from \"../components/EventCardGroup\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\n\nconst SearchSection = styled.div({\n  margin: \"1em 0 3em !important\"\n});\nconst SearchBar = styled(Input)({\n  width: \"50% !important\",\n  marginBottom: \"1em\"\n});\n\nconst SearchResultCount = styled.span({\n  display: \"block\",\n  color: \"grey\",\n  paddingLeft: \"15px\"\n});\n\nconst SearchResults = styled.div({\n  paddingLeft: \"15px\"\n});\n\nconst DateFilter = styled(Select)({\n  marginLeft: \"15px !important\"\n});\n\nconst EventCardGroupContainer = ({ query }) => {\n  const [searchQuery, setSearchQuery] = React.useState(query);\n  const [searchInProgress, setSearchInProgress] = React.useState(false);\n  const [allEvents, setAllEvents] = React.useState([]);\n  const [visibleEvents, setVisibleEvents] = React.useState([]);\n  useDocumentTitle(`Search - ${searchQuery}`);\n\n  const handleDateFilter = (e, { value }) => {\n    if (value === \"all\") {\n      setVisibleEvents(allEvents);\n    } else {\n      const comparisonDate = moment.utc().subtract(value, \"months\");\n      const isAfter = date => moment.utc(date).isAfter(comparisonDate);\n      setVisibleEvents(allEvents.filter(({ date }) => isAfter(date)));\n    }\n  };\n\n  React.useEffect(() => {\n    (async () => {\n      if (searchQuery) {\n        setSearchInProgress(true);\n        const matchedEvents = await getEventsByIndexedTerm(searchQuery);\n        // filter all events by name and set visible event\n        setAllEvents(matchedEvents);\n        setVisibleEvents(matchedEvents);\n        setSearchInProgress(false);\n      }\n    })();\n  }, []);\n\n  const handleSearch = async (e, { value }) => {\n    setSearchQuery(value);\n    setSearchInProgress(true);\n    const matchedEvents = await getEventsByIndexedTerm(value);\n    // filter all events by name and set visible event\n    setAllEvents(matchedEvents);\n    setVisibleEvents(matchedEvents);\n    setSearchInProgress(false);\n  };\n\n  const filterOptions = [\n    { key: \"-1\", value: \"all\", text: \"All\" },\n    { key: \"0.25\", value: \"0.25\", text: \"Past week\" },\n    { key: \"1\", value: \"1\", text: \"Past month\" },\n    { key: \"3\", value: \"3\", text: \"Past 3 months\" },\n    { key: \"6\", value: \"6\", text: \"Past 6 months\" },\n    { key: \"12\", value: \"12\", text: \"Past year\" }\n  ];\n\n  return (\n    <React.Fragment>\n      <SearchSection>\n        <SearchBar\n          placeholder=\"Search by event name\"\n          value={searchQuery}\n          onChange={handleSearch}\n          loading={searchInProgress}\n        />\n        <DateFilter\n          placeholder=\"Filter by date range\"\n          options={filterOptions}\n          onChange={handleDateFilter}\n        />\n        {searchQuery !== \"\" && (\n          <SearchResultCount>{visibleEvents.length} results</SearchResultCount>\n        )}\n      </SearchSection>\n      <SearchResults>\n        <EventCardGroup events={visibleEvents} />\n      </SearchResults>\n    </React.Fragment>\n  );\n};\n\nexport default EventCardGroupContainer;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport queryString from \"query-string\";\nimport EventCardGroup from \"../containers/EventCardGroup\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst Search = ({ location }) => {\n  const { q } = queryString.parse(location.search);\n  return (\n    <Layout>\n      <ContentContainer>\n        <EventCardGroup query={q} />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default Search;\n","function hhmmss(sec_num) {\n  sec_num = parseInt(sec_num, 10); // don't forget the second param\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\nexport default hhmmss;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List, WindowScroller } from 'react-virtualized';\nimport { Icon } from \"semantic-ui-react\";\nimport Highlighter from \"react-highlight-words\";\nimport styled from \"@emotion/styled\";\nimport hhmmss from \"../utils/hhmmss\";\n\nconst TranscriptItem = styled.div({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  alignItems: \"center\",\n  margin: \"1em 0\",\n  padding: \"0.2em\"\n});\n\nconst TranscriptItemText = styled.div(props => ({\n  width: props.isSearch ? \"100%\" : \"85%\",\n  order: props.isSearch ? \"0\" : \"1\",\n  boxSizing: \"border-box\",\n  fontSize: \"16px\",\n  lineHeight: \"1.5em\",\n  \"@media(max-width:720px)\": {\n    width: \"100%\",\n    order: \"0\"\n  }\n}));\n\nconst TimeStamp = styled.div(props => ({\n  width: props.isSearch ? \"100%\" : \"15%\",\n  order: props.isSearch ? \"1\" : \"0\",\n  boxSizing: \"border-box\",\n  padding: props.isSearch ? \"0\" : \"0.5em\",\n  \"@media(max-width:720px)\": {\n    width: \"100%\",\n    padding: \"0\",\n    order: \"1\"\n  }\n}));\n\nconst EventTranscript = ({\n  searchText,\n  transcript,\n  handleSeek,\n  isSearch\n}) => {\n  const windowScrollerRef = React.useRef(null);\n\n  const cache = new CellMeasurerCache({\n    fixedWidth: true,\n    defaultHeight: 100,\n  });\n\n  React.useEffect(() => {\n    const handleUpdateScrollPosition = () => {\n      if (windowScrollerRef.current) {\n        windowScrollerRef.current.updatePosition();\n      }\n    };\n    document.addEventListener(\"update-scroll-position\", handleUpdateScrollPosition);\n    return () => {\n      document.removeEventListener(\"update-scroll-position\", handleUpdateScrollPosition);\n    };\n  }, []);\n\n  const onResize = () => {\n    cache.clearAll();\n  };\n\n  const Row = ({ index, parent, key, style }) => (\n    <CellMeasurer\n      key={key}\n      cache={cache}\n      parent={parent}\n      columnIndex={0}\n      rowIndex={index}\n    >\n      <div style={style}>\n        <TranscriptItem>\n          <TimeStamp isSearch={isSearch}>\n            <Button size=\"tiny\" onClick={() => handleSeek(transcript[index].start_time)}>\n              <Icon name=\"play\" />\n              {hhmmss(transcript[index].start_time)}\n            </Button>\n          </TimeStamp>\n          <TranscriptItemText isSearch={isSearch}>\n            <Highlighter\n              searchWords={[searchText]}\n              autoEscape={true}\n              textToHighlight={transcript[index].text}\n            />\n          </TranscriptItemText>\n        </TranscriptItem>\n      </div>\n    </CellMeasurer>\n  );\n\n  if (isSearch) {\n    return (\n      <AutoSizer onResize={onResize}>\n        {({ width, height }) => (\n          <List\n            deferredMeasurementCache={cache}\n            height={height}\n            rowCount={transcript.length}\n            rowHeight={cache.rowHeight}\n            rowRenderer={Row}\n            scrollToIndex={0}\n            style={{ willChange: \"\" }}\n            width={width}\n          />\n        )}\n      </AutoSizer>\n    );\n  } else {\n    return (\n      <WindowScroller ref={windowScrollerRef}>\n        {({ height, isScrolling, onChildScroll, scrollTop }) => (\n          <AutoSizer disableHeight onResize={onResize}>\n            {({ width }) => (\n              <List\n                autoHeight\n                deferredMeasurementCache={cache}\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={transcript.length}\n                rowHeight={cache.rowHeight}\n                rowRenderer={Row}\n                scrollTop={scrollTop}\n                style={{ willChange: \"\" }}\n                width={width}\n              />)}\n          </AutoSizer>\n        )}\n      </WindowScroller>\n    );\n  }\n};\n\nexport default React.memo(EventTranscript);","const isSubstring = (string = \"\", substring = \"\") =>\n  string.toLowerCase().indexOf(substring.toLowerCase()) !== -1;\n\nexport default isSubstring;\n","import React from \"react\";\nimport { Input } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport EventTranscript from \"./EventTranscript\";\nimport isSubstring from \"../utils/isSubstring\";\n\nconst StyledEventSearch = styled.div({\n  margin: \"1em 0\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    width: \"40%\",\n    margin: \"0\"\n  }\n});\n\nconst Subheader = styled.h2({ width: \"100%\" });\n\nconst SearchInput = styled(Input)({\n  width: \"100%\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\"\n});\n\nconst SearchResultCount = styled.span({\n  display: \"block\",\n  marginTop: \"1em\",\n  color: \"grey\",\n  paddingLeft: \"15px\"\n});\n\nconst TranscriptSearchHelpMessage = styled.span({\n  display: \"block\",\n  marginTop: \"1em\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\",\n  paddingLeft: \"15px\"\n});\n\nconst SearchResultsWrapper = styled.div({\n  marginTop: \"1em\",\n  border: \"1px solid lightgray\",\n  borderRadius: \"0.28rem\",\n  boxSizing: \"border-box\",\n  minHeight: \"calc(.5625 * 90vw)\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    flex: \"1 1 auto\",\n    minHeight: \"0\"\n  }\n});\n\nconst EventSearch = ({\n  transcript,\n  handleSeek,\n  mediaQueriesMatches\n}) => {\n  const [transcriptSearchText, setTranscriptSearchText] = React.useState(\"\");\n\n  const handleTranscriptSearch = (e, { value }) => {\n    setTranscriptSearchText(value);\n    if(!mediaQueriesMatches) {\n      document.dispatchEvent(new CustomEvent(\"update-scroll-position\"));\n    }\n  };\n\n  const transcriptItems = transcript.filter(({ text }) => isSubstring(text, transcriptSearchText));\n\n  return (\n    <StyledEventSearch>\n      <Subheader>Search Transcript</Subheader>\n      <SearchInput\n        onChange={handleTranscriptSearch}\n        value={transcriptSearchText}\n        placeholder=\"Search transcript\"\n      />\n      {transcriptSearchText !== \"\" && (\n        <SearchResultCount>\n          {transcriptItems.length} results\n        </SearchResultCount>\n      )}\n      {transcriptSearchText !== \"\" && transcriptItems.length > 0 && (\n        <SearchResultsWrapper>\n          <EventTranscript\n            searchText={transcriptSearchText}\n            transcript={transcriptItems}\n            handleSeek={handleSeek}\n            isSearch={true}\n          />\n        </SearchResultsWrapper>\n      )}\n      {transcriptSearchText === \"\" && (\n        <TranscriptSearchHelpMessage>\n          Enter a search term to get results.\n        </TranscriptSearchHelpMessage>\n      )}\n    </StyledEventSearch>\n  );\n};\n\nexport default EventSearch;","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MinuteList = styled.ol({\n  listStylePosition: \"outside\",\n  paddingLeft: \"1.5em\"\n});\n\nconst MinuteTitle = styled.div({\n  fontSize: \"1em\",\n  fontWeight: \"500\"\n});\n\nconst MinuteDescription = styled.div({\n  fontSize: \"0.95em\"\n});\n\nconst FileList = styled.ul({\n  listStylePosition: \"outside\",\n  listStyleType: \"disc\",\n  paddingLeft: \"2em\"\n});\n\nconst EventMinutes = ({\n  minutes,\n  scPageUrl\n}) => {\n  return (\n    <React.Fragment>\n      <h3>Minutes</h3>\n      <MinuteList>\n        {minutes.map(({ minutes_item }) => (\n          <li key={minutes_item.id}>\n            <MinuteTitle>{minutes_item.matter ? minutes_item.matter : minutes_item.name}</MinuteTitle>\n            {minutes_item.matter && minutes_item.matter !== minutes_item.name && <MinuteDescription>{minutes_item.name}</MinuteDescription>}\n            {minutes_item.file.length > 0 && <FileList>\n              {minutes_item.file.map(({ id, name, uri }) => (\n                <li key={id}>\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={uri}>{name}</a>\n                </li>\n              ))}\n            </FileList>}\n          </li>\n        ))}\n      </MinuteList>\n      <h3>Links</h3>\n      <a href={scPageUrl}>Seattle Channel Event Page</a>\n    </React.Fragment>\n  );\n};\n\nexport default EventMinutes;","import React from 'react'\nimport { Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styled from \"@emotion/styled\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst Headers = [\n  {\n    accessor: 'matter',\n    text: 'Matter',\n    width: '2'\n  },\n  {\n    accessor: 'decision',\n    text: 'Decision',\n    width: '1'\n  },\n  {\n    accessor: 'name',\n    text: 'Name',\n    width: '6'\n  },\n  {\n    accessor: 'votingRecords',\n    text: 'Vote',\n    width: '5'\n  }\n]\n\nconst MiniTable = styled('div')({\n  display: 'flex'\n});\n\nconst Person = styled('div')({\n  width: '70%'\n});\n\nconst Decision = styled('div')({\n  width: '30%'\n});\n\nconst StyledTableHeader = styled(Table.Header)({\n  '@media(max-width:767px)': {\n    display: 'none !important'\n  }\n});\n\n\nconst VotingTable = ({ votingData, isPerson }) => (\n  <Table striped>\n    <StyledTableHeader>\n      <Table.Row>\n        {Headers.map(headerMetaData => (<Table.HeaderCell\n          key={headerMetaData.text}>{headerMetaData.text}\n          </Table.HeaderCell> \n        ))}\n        {/* If we are rendering votes for a person, we want to link to the event */}\n        {isPerson && <Table.HeaderCell key={'Event'}>Event</Table.HeaderCell>}\n      </Table.Row>\n    </StyledTableHeader>\n    <Table.Body>\n      {votingData.map(votingDatum => (\n        <Table.Row key={votingDatum.id}>\n          {Headers.map(headerMetaData => {\n            if (headerMetaData.accessor !== 'votingRecords') {\n              return (\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\n                  {votingDatum[headerMetaData.accessor]}\n                </Table.Cell>\n              )\n            }\n            if (votingDatum.formattedIndividualVotes) {\n              return (\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\n                  {votingDatum.formattedIndividualVotes.map(record => {\n                    return (\n                      <MiniTable key={record.full_name}>\n                        <Person>\n                          <Link to={`/people/${record.person_id}`}>\n                            {record.full_name}\n                          </Link>\n                        </Person>\n                        <Decision>\n                          {record.decision}\n                        </Decision>\n                      </MiniTable>\n                    )\n                  })}\n                </Table.Cell>\n              )\n            } else {\n              return (\n                <React.Fragment key={headerMetaData.accessor}>\n                  <Table.Cell width={'1'}>\n                    {votingDatum.voteForPerson}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Link to={`/events/${votingDatum.eventId}`}>\n                      <span>{votingDatum.body_name}</span>\n                    </Link>\n                    <div>{getDateTime(votingDatum.eventDate)}</div>\n                  </Table.Cell>\n                </React.Fragment>\n              )\n            }\n          })}\n        </Table.Row>\n      ))}\n    </Table.Body>\n  </Table>\n)\n\nexport default VotingTable\n","import React from \"react\";\nimport { Menu, Sticky } from \"semantic-ui-react\";\nimport EventMinutes from \"./EventMinutes\";\nimport EventTranscript from \"./EventTranscript\";\nimport VotingTable from \"./VotingTable\";\nimport styled from \"@emotion/styled\";\n\nconst StyledEventTabs = styled.div({\n  margin: \"1em 0\",\n  width: \"100%\",\n  fontSize: \"16px\",\n  lineHeight: \"1.5\",\n  \"a.item\": {\n    fontSize: \"1.3em !important\"\n  }\n});\n\nconst StyledEventMenu = styled(Menu)({\n  borderBottom: \"0 !important\",\n  marginBottom: \"1em !important\",\n  paddingTop: \"1em !important\",\n  backgroundColor: \"white !important\",\n  zIndex: \"0 !important\",\n  width: \"100%\"\n});\n\nconst EventTabs = ({\n  minutes,\n  scPageUrl,\n  transcript,\n  votes,\n  handleSeek,\n  topOffset,\n  mediaQueriesMatches\n}) => {\n  const [activeItem, setActiveItem] = React.useState(\"details\");\n  const contextRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const domRect = contextRef.current.getBoundingClientRect();\n    if (domRect.top < 0) {\n      contextRef.current.scrollIntoView(true);\n      if (!mediaQueriesMatches) {\n        window.scrollBy(0, -topOffset);\n      }\n    }\n  }, [activeItem, mediaQueriesMatches, topOffset]);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n\n  return (\n    <StyledEventTabs ref={contextRef}>\n      <Sticky\n        context={contextRef}\n        offset={topOffset}\n        styleElement={{ zIndex: \"1\" }}\n      >\n        <StyledEventMenu secondary pointing>\n          <Menu.Item active={activeItem === \"details\"} name=\"details\" onClick={handleItemClick} />\n          <Menu.Item active={activeItem === \"transcript\"} name=\"transcript\" onClick={handleItemClick} />\n          <Menu.Item active={activeItem === \"votes\"} name=\"votes\" onClick={handleItemClick} />\n        </StyledEventMenu>\n      </Sticky>\n      {{\n        details: <EventMinutes minutes={minutes} scPageUrl={scPageUrl} />,\n        transcript: <EventTranscript\n          searchText={\"\"}\n          transcript={transcript}\n          handleSeek={handleSeek}\n          isSearch={false}\n        />,\n        votes: votes.length ? <VotingTable votingData={votes} /> : <div>No votes found for this event.</div>\n      }[activeItem]}\n    </StyledEventTabs>\n  );\n};\n\nexport default React.memo(EventTabs);\n","import React from \"react\";\nimport EventSearch from \"./EventSearch\";\nimport EventTabs from \"./EventTabs\";\nimport ReactPlayer from \"react-player\";\nimport styled from \"@emotion/styled\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst StyledEvent = styled.div({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  justifyContent: \"space-between\"\n});\n\nconst Header = styled.div({\n  width: \"100%\",\n  margin: \"1em 0\"\n});\n\nconst EventDate = styled.h5({\n  margin: \"0.1em 0\",\n  color: \"grey\",\n  fontWeight: \"400\"\n});\n\nconst FixedSentinel = styled.div({\n  position: \"absolute\",\n  left: \"0\",\n  right: \"0\",\n  visibility: \"hidden\",\n  height: \"90px\",\n  backgroundColor: \"yellow\"\n});\n\nconst DummyContainer = styled.div(props => ({\n  position: \"relative\",\n  display: \"none\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    display: props.isFixed ? \"block\" : \"none\",\n    width: \"59%\"\n  }\n}));\n\nconst DummyDiv = styled.div({\n  position: \"absolute\",\n  top: \"0\",\n  left: \"0\",\n  backgroundColor: \"black\",\n  height: \"100%\",\n  width: \"100%\"\n});\n\nconst PlayerContainer = styled.div(props => ({\n  width: \"100%\",\n  position: !props.isPip ? \"sticky\" : \"relative\",\n  top: \"0\",\n  zIndex: \"2\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    position: props.isFixed && !props.isPip ? \"fixed\" : \"relative\",\n    width: props.isFixed && !props.isPip ? \"20vw\" : \"59%\",\n    right: \"0\"\n  }\n}));\n\nconst PlayerWrapper = styled.div({\n  position: \"relative\",\n  paddingTop: \"56.25%\"\n});\n\nconst StyledReactPlayer = styled(ReactPlayer)({\n  position: \"absolute\",\n  top: \"0\",\n  left: \"0\"\n});\n\nconst Event = ({\n  id,\n  title,\n  date,\n  minutes,\n  scPageUrl,\n  videoUrl,\n  transcript,\n  votes\n}) => {\n  const fixedSentinelRef = React.useRef(null);\n  const videoPlayerRef = React.useRef(null);\n  const [isPip, setIsPip] = React.useState(false);\n  const [isFixed, setIsFixed] = React.useState(false);\n  const [mediaQueriesMatches, setMediaQueriesMatches] = React.useState(window.matchMedia(\"(min-aspect-ratio:5/4), (min-width:1200px)\").matches);\n  const [topOffset, setTopOffset] = React.useState(0);\n\n  React.useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.1\n    };\n\n    const handleIntersect = (entries, observer) => {\n      if (mediaQueriesMatches && !isPip) {\n        if (entries[0].intersectionRatio >= 0.1 && entries[0].isIntersecting) {\n          setIsFixed(false);\n        } else {\n          setIsFixed(true);\n        }\n      }\n    };\n\n    const observer = new IntersectionObserver(handleIntersect, options);\n    observer.observe(fixedSentinelRef.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [isPip, mediaQueriesMatches]);\n\n  React.useEffect(() => {\n    const video = videoPlayerRef.current.getInternalPlayer();\n\n    const onEnterPip = () => {\n      setIsFixed(false);\n      setIsPip(true);\n    };\n\n    const onLeavePip = () => {\n      setIsPip(false);\n    };\n\n    video.addEventListener(\"enterpictureinpicture\", onEnterPip);\n    video.addEventListener(\"leavepictureinpicture\", onLeavePip);\n    return () => {\n      video.removeEventListener(\"enterpictureinpicture\", onEnterPip);\n      video.removeEventListener(\"leavepictureinpicture\", onLeavePip);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const onResize = () => {\n      const mediaQueriesList = window.matchMedia(\"(min-aspect-ratio:5/4), (min-width:1200px)\");\n      if(!mediaQueriesList.matches) {\n        setTopOffset(videoPlayerRef.current.getInternalPlayer().offsetHeight);\n      } else {\n        setTopOffset(0);\n      }\n      setMediaQueriesMatches(mediaQueriesList.matches);\n\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  const handleSeek = seconds => {\n    videoPlayerRef.current.seekTo(parseFloat(seconds));\n    const video = videoPlayerRef.current.getInternalPlayer();\n\n    if (video.paused && videoPlayerRef.current.getCurrentTime() > 0) {\n      video.play();\n    }\n  };\n\n  const onVideoReady = () => {\n    if(!mediaQueriesMatches) {\n      setTopOffset(videoPlayerRef.current.getInternalPlayer().offsetHeight);\n    }\n  };\n\n  return (\n    <StyledEvent>\n      <Header>\n        <h1>{title}</h1>\n        <EventDate>Meeting Date: {getDateTime(date)}</EventDate>\n      </Header>\n      <FixedSentinel ref={fixedSentinelRef} />\n      <DummyContainer isFixed={isFixed}>\n        <PlayerWrapper>\n          <DummyDiv />\n        </PlayerWrapper>\n      </DummyContainer>\n      <PlayerContainer isPip={isPip} isFixed={isFixed}>\n        <PlayerWrapper>\n          <StyledReactPlayer\n            ref={videoPlayerRef}\n            url={videoUrl}\n            onReady={onVideoReady}\n            controls\n            height=\"100%\"\n            width=\"100%\"\n          />\n        </PlayerWrapper>\n      </PlayerContainer>\n      <EventSearch\n        transcript={transcript}\n        handleSeek={handleSeek}\n        mediaQueriesMatches={mediaQueriesMatches}\n      />\n      <EventTabs\n        minutes={minutes}\n        scPageUrl={scPageUrl}\n        transcript={transcript}\n        votes={votes}\n        handleSeek={handleSeek}\n        topOffset={topOffset}\n        mediaQueriesMatches={mediaQueriesMatches}\n      />\n    </StyledEvent>\n  );\n};\n\nexport default Event;\n","import React from \"react\";\nimport { getEventById } from \"../api\";\nimport { Loader } from \"semantic-ui-react\";\nimport Event from \"../components/Event\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst EventContainer = ({ id }) => {\n  const [event, setEvent] = React.useState();\n  useDocumentTitle(event ? `${event.name} - ${getDateTime(event.date)}` : 'Loading...');\n\n  React.useEffect(() => {\n    try {\n      (async () => {\n        const eventData = await getEventById(id);\n        setEvent(eventData);\n      })();\n    } catch (e) {\n      // log error and display message\n    }\n  }, [id]);\n\n  return event ? (\n    <Event\n      id={id}\n      title={event.name}\n      date={event.date}\n      description={event.description}\n      scPageUrl={event.scPageUrl}\n      videoUrl={event.videoUrl}\n      minutes={event.minutes}\n      transcript={event.transcript}\n      votes={event.votes}\n    />\n  ) : <Loader active/>;\n};\n\nexport default EventContainer;\n","import React from \"react\";\nimport Event from \"../containers/Event\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst EventPage = ({ match }) => {\n  return (\n    <Layout>\n      <ContentContainer>\n        <Event id={match.params.id} />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default EventPage;\n","import React from \"react\";\nimport { Select } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport styled from \"@emotion/styled\";\nimport { getBasicEventById, getAllEvents } from \"../api\";\nimport EventCardGroup from \"../components/EventCardGroup\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\n\nconst FiltersSection = styled.div({\n  margin: \"1em 0 3em !important\"\n});\n\nconst ResultCount = styled.span({\n  display: \"block\",\n  color: \"grey\",\n  paddingLeft: \"15px\",\n  paddingTop: \"8px\"\n});\n\nconst LoadingText = styled.span({\n  color: \"grey\",\n  fontWeight: \"700\",\n  fontSize: \"18px\"\n});\n\nconst Results = styled.div({\n  paddingLeft: \"15px\"\n});\n\nconst DateFilter = styled(Select)({});\n\nconst EventCardGroupContainer = ({ query }) => {\n  const [allEvents, setAllEvents] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [visibleEvents, setVisibleEvents] = React.useState([]);\n  useDocumentTitle('Committee Events');\n\n  const handleDateFilter = (e, { value }) => {\n    if (value === \"all\") {\n      setVisibleEvents(allEvents);\n    } else {\n      const comparisonDate = moment.utc().subtract(value, \"months\");\n      const isAfter = date => moment.utc(date).isAfter(comparisonDate);\n      setVisibleEvents(allEvents.filter(({ date }) => isAfter(date)));\n    }\n  };\n\n  React.useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const allEvents = await getAllEvents();\n      const basicEventData = await Promise.all(\n        allEvents.map(({ id }) => getBasicEventById(id))\n      );\n      setAllEvents(basicEventData);\n      setVisibleEvents(basicEventData);\n      setIsLoading(false);\n    })();\n  }, []);\n\n  const filterOptions = [\n    { key: \"-1\", value: \"all\", text: \"All\" },\n    { key: \"0.25\", value: \"0.25\", text: \"Past week\" },\n    { key: \"1\", value: \"1\", text: \"Past month\" },\n    { key: \"3\", value: \"3\", text: \"Past 3 months\" },\n    { key: \"6\", value: \"6\", text: \"Past 6 months\" },\n    { key: \"12\", value: \"12\", text: \"Past year\" }\n  ];\n\n  return (\n    <React.Fragment>\n      <FiltersSection>\n        <DateFilter\n          placeholder=\"Filter by date range\"\n          options={filterOptions}\n          onChange={handleDateFilter}\n        />\n        <ResultCount>{visibleEvents.length} results</ResultCount>\n      </FiltersSection>\n      <Results>\n        {isLoading ? (\n          <LoadingText>Loading...</LoadingText>\n        ) : (\n          <EventCardGroup events={visibleEvents} />\n        )}\n      </Results>\n    </React.Fragment>\n  );\n};\n\nexport default EventCardGroupContainer;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport AllEvents from \"../containers/AllEvents\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst AllEventsPage = () => {\n  return (\n    <Layout>\n      <ContentContainer>\n        <h2>All Events</h2>\n        <AllEvents />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default AllEventsPage;\n","import React, { Fragment } from 'react'\nimport { withRouter } from \"react-router-dom\"\nimport styled from \"@emotion/styled\";\n\nconst FlexWrapContainer = styled('div')({\n    display: 'flex',\n    flexWrap: 'wrap',\n})\n\nconst Card = styled('div')({\n    width: '250px',\n    border: '1px solid #d4d4d5',\n    boxShadow: '0 1px 3px 0 #d4d4d5',\n    padding: '1.5rem',\n    marginBottom: '1.5rem',\n    borderRadius: '3px',\n    marginRight: '2rem',\n    cursor: 'pointer',\n    transition: '.4s all',\n    \":hover\": {\n        transform: 'scale(1.15)',\n    }\n})\n\nconst CardHeading = styled('h5')({\n    fontWeight: 600,\n    fontSize: '1.2rem'\n})\n\n\nconst PeopleCardGroup = ({ people, history }) => {\n    return (\n        <Fragment>\n            <h2>Voting History</h2>\n            <FlexWrapContainer>\n                {people.map(({ full_name, email, id }) => (\n                    <Card\n                        key={full_name}\n                        onClick={() => history.push(`/people/${id}`)}>\n                        <CardHeading>{full_name}</CardHeading>\n                        <p>City Council Member</p>\n                        <a href={`mailto:${email}`}>{email}</a>\n                    </Card>\n                    )\n                )}\n            </FlexWrapContainer>\n        </Fragment>\n    )\n}\n\nexport default withRouter(PeopleCardGroup)\n","import React, { useEffect, useState } from 'react'\nimport { getAllPeople } from '../api'\nimport PeopleCardGroup from '../components/PeopleCardGroup'\nimport { Loader } from \"semantic-ui-react\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\n\nconst PeopleCardGroupContainer = () => {\n    const [people, updatePeople] = useState(null);\n    useDocumentTitle('City Council Members');\n\n    useEffect(() => {\n        async function fetchData() {\n            const data = await getAllPeople()\n            updatePeople(data)\n        }\n        fetchData()\n    },[])\n\n    if(!people) {\n        return <Loader active/>\n    }\n    return (\n        <PeopleCardGroup people={people} />\n    )\n}\n\nexport default PeopleCardGroupContainer;","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport PeopleCardGroupContainer from '../containers/PeopleCardGroupContainer';\n\n// TODO: duplicate from Home, move to utils\nconst Layout = styled(Container)({\n    minHeight: \"100vh\"\n  });\n\n// TODO: duplicate from Home, move to utils\nconst ContentContainer = styled(Container)({\n    marginTop: \"2em !important\",\n    marginBottom: \"5em !important\"\n  });\n\nconst People = () => {\n    return (\n        <Layout>\n            <ContentContainer>\n                <PeopleCardGroupContainer />\n            </ContentContainer>\n        </Layout>\n    );\n}\n\nexport default People;\n","import React from 'react';\nimport VotingTable from './VotingTable'\nimport { Card } from 'semantic-ui-react'\nimport styled from \"@emotion/styled\";\n\nconst FlexContainer = styled('div')({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n})\n\nconst Person = ({personHistory: {full_name, email, phone, website, votes}}) => {\n    return (\n    <FlexContainer>\n        <Card style={{padding: '1rem', width: '100%'}}>\n            <Card.Header>{full_name}</Card.Header>\n            <a href={`mailto:${email}`}>{email}</a>\n            <div>{phone}</div>\n            <div>\n                Website:  \n                <a  target={'_blank'}\n                    rel=\"noopener noreferrer\"\n                    href={website}>{website}</a>\n            </div>\n        </Card>\n        <VotingTable votingData={votes} isPerson={true} />\n    </FlexContainer>\n    )\n}\n\nexport default Person;","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getVotesForPerson } from '../api';\nimport Person from '../components/Person';\nimport { Loader } from \"semantic-ui-react\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\n\nconst PersonContainer = ({ match: { params: { id }} }) => {\n    const [personHistory, updatePersonHistory] = useState(null);\n    useDocumentTitle(personHistory ? personHistory.full_name : 'Loading...');\n    useEffect(() => {\n        async function fetchData() {\n            const votes = await getVotesForPerson(id);\n            updatePersonHistory(votes);\n        }\n        fetchData()\n    }, [id])\n    if(!personHistory) {\n        return <Loader active/>\n    }\n    return (\n        <Person personHistory={personHistory}/>\n    )\n}\n\nexport default withRouter(PersonContainer);","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport PersonContainer from \"../containers/PersonContainer\";\nimport styled from \"@emotion/styled\";\n\n// TODO: duplicate from Home, move to utils\nconst Layout = styled(Container)({\n    minHeight: \"100vh\"\n  });\n\n// TODO: duplicate from Home, move to utils\nconst ContentContainer = styled(Container)({\n    marginTop: \"2em !important\",\n    marginBottom: \"5em !important\"\n  });\n\nconst Person = () => {\n    return (\n        <Layout>\n            <ContentContainer>\n                <PersonContainer />\n            </ContentContainer>\n        </Layout>\n    );\n}\n\nexport default Person;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport withTracker from \"./utils/withTracker\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\nimport Event from \"./pages/Event\";\nimport AllEvents from \"./pages/AllEvents\";\nimport People from \"./pages/People\";\nimport Person from \"./pages/Person\";\n\n// Run Google Analytics\nReactGA.initialize(\"UA-145893191-1\");\n\nconst App = () => (\n  <Router basename=\"/\">\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={withTracker(Home)} />\n      <Route path=\"/search\" component={withTracker(Search)} />\n      <Route exact path=\"/events\" component={withTracker(AllEvents)} />\n      <Route path=\"/events/:id\" component={withTracker(Event)} />\n      <Route exact path=\"/people\" component={withTracker(People)} />\n      <Route exact path=\"/people/:id\" component={withTracker(Person)} />\n    </Switch>\n    <Footer />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}